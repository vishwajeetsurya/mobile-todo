"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rpcRequestForEvent = exports.headerValue = exports.routeId = void 0;
const url_1 = require("url");
const util_1 = require("./util");
class ServerRPCRequest {
    constructor(event) {
        this.event = event;
    }
    get status() {
        return this.event.httpServerResponse.status;
    }
    get parameters() {
        return this.event.message || [];
    }
    get returnValue() {
        return this.event.returnValue;
    }
    get requestHeaders() {
        var _a;
        return ((_a = this.event.httpServerRequest) === null || _a === void 0 ? void 0 : _a.headers) || {};
    }
    get responseHeaders() {
        var _a;
        return ((_a = this.event.httpServerResponse) === null || _a === void 0 ? void 0 : _a.headers) || {};
    }
    get requestContentType() {
        return this.event.requestContentType;
    }
    get responseContentType() {
        return this.event.responseContentType;
    }
    get requestMethod() {
        var _a;
        return (_a = this.event.requestMethod) === null || _a === void 0 ? void 0 : _a.toLowerCase();
    }
    get requestPath() {
        return (0, util_1.ensureString)(this.event.httpServerRequest.normalized_path_info || this.event.httpServerRequest.path_info);
    }
}
class ClientRPCRequest {
    constructor(event) {
        this.event = event;
    }
    get status() {
        return this.event.httpClientResponse.status;
    }
    get parameters() {
        return this.event.parameters || [];
    }
    get returnValue() {
        return this.event.returnValue;
    }
    get requestHeaders() {
        var _a;
        return ((_a = this.event.httpClientRequest) === null || _a === void 0 ? void 0 : _a.headers) || {};
    }
    get responseHeaders() {
        var _a;
        return ((_a = this.event.httpClientResponse) === null || _a === void 0 ? void 0 : _a.headers) || {};
    }
    get requestContentType() {
        return this.event.requestContentType;
    }
    get responseContentType() {
        return this.event.responseContentType;
    }
    get requestMethod() {
        var _a;
        return (_a = this.event.requestMethod) === null || _a === void 0 ? void 0 : _a.toLowerCase();
    }
    get requestPath() {
        // TODO: Back-substitute query parameters into the URL.
        return new url_1.URL(this.event.httpClientRequest.url).pathname;
    }
}
function isServerEvent(event) {
    var _a;
    return (!!event.httpServerRequest &&
        !!event.httpServerResponse &&
        !!(event.httpServerRequest.normalized_path_info || ((_a = event.httpServerRequest) === null || _a === void 0 ? void 0 : _a.path_info)));
}
function isClientEvent(event) {
    return !!event.httpClientRequest && !!event.httpClientResponse && !!event.httpClientRequest.url;
}
function routeId(request) {
    return [request.requestMethod.toUpperCase(), request.requestPath].join(' ');
}
exports.routeId = routeId;
function headerValue(headers, name) {
    const nameLower = name.toLowerCase();
    const key = Object.keys(headers).find((header) => header.toLowerCase() === nameLower);
    if (key)
        return headers[key];
}
exports.headerValue = headerValue;
function rpcRequestForEvent(event) {
    if (isServerEvent(event))
        return new ServerRPCRequest(event);
    if (isClientEvent(event))
        return new ClientRPCRequest(event);
}
exports.rpcRequestForEvent = rpcRequestForEvent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnBjUmVxdWVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9ycGNSZXF1ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLDZCQUEwQjtBQUMxQixpQ0FBc0M7QUFpQnRDLE1BQU0sZ0JBQWdCO0lBQ3BCLFlBQW9CLEtBQXFCO1FBQXJCLFVBQUssR0FBTCxLQUFLLENBQWdCO0lBQUcsQ0FBQztJQUU3QyxJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDO0lBQzlDLENBQUM7SUFFRCxJQUFJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQztJQUNoQyxDQUFDO0lBRUQsSUFBSSxjQUFjOztRQUNoQixPQUFPLENBQUEsTUFBQSxJQUFJLENBQUMsS0FBSyxDQUFDLGlCQUFpQiwwQ0FBRSxPQUFPLEtBQUksRUFBRSxDQUFDO0lBQ3JELENBQUM7SUFFRCxJQUFJLGVBQWU7O1FBQ2pCLE9BQU8sQ0FBQSxNQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsa0JBQWtCLDBDQUFFLE9BQU8sS0FBSSxFQUFFLENBQUM7SUFDdEQsQ0FBQztJQUVELElBQUksa0JBQWtCO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQztJQUN2QyxDQUFDO0lBRUQsSUFBSSxtQkFBbUI7UUFDckIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLG1CQUFtQixDQUFDO0lBQ3hDLENBQUM7SUFFRCxJQUFJLGFBQWE7O1FBQ2YsT0FBTyxNQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSwwQ0FBRSxXQUFXLEVBQTJCLENBQUM7SUFDMUUsQ0FBQztJQUVELElBQUksV0FBVztRQUNiLE9BQU8sSUFBQSxtQkFB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