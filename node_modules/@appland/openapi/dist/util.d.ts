import { OpenAPIV3 } from 'openapi-types';
import { SchemaExample } from './appmap';
interface Scheme {
    schemeId: string;
    scheme: OpenAPIV3.SecuritySchemeObject;
}
declare function parseScheme(authorization: string): Scheme;
type OptSchemaObjectType = OpenAPIV3.SchemaObject['type'];
export interface ClassNameToOpenApiTypeOptions {
    strict?: boolean;
}
declare function classNameToOpenAPIType(className?: string, options?: ClassNameToOpenApiTypeOptions): OptSchemaObjectType;
declare function messageToOpenAPISchema(example: SchemaExample): OpenAPIV3.SchemaObject | undefined;
declare function ensureString(value: Array<string> | string): string;
export declare function verbose(v?: boolean): boolean;
export { classNameToOpenAPIType, ensureString, messageToOpenAPISchema, parseScheme };
