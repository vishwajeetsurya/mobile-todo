{"version":3,"sources":["../src/codeObjectType.js","../src/codeObjectId.js","../src/util.js","../src/sql/normalize.js","../src/sql/parse.js","../src/sql/parseError.js","../src/sql/sqlErrorHandler.js","../src/sql/analyze.js","../src/codeObject.js","../src/classMap.js","../src/callTree/callNode.js","../src/eventSource.js","../src/callTree/callTree.js","../src/appMap.js","../src/hashBuilder.js","../src/event.js","../src/appMapBuilder/eventStack.js","../src/appMapBuilder/eventSorter.js","../src/appMapBuilder/index.js","../src/eventNavigator.js","../src/eventInfo.js","../src/appMapFilter.js","../src/serialize.js"],"sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport const CodeObjectType = {\n  ANALYSIS_FINDING: 'analysis-finding',\n  DATABASE: 'database',\n  QUERY: 'query',\n  HTTP: 'http',\n  EXTERNAL_ROUTE: 'external-route',\n  EXTERNAL_SERVICE: 'external-service',\n  ROUTE: 'route',\n  PACKAGE: 'package',\n  CLASS: 'class',\n  FUNCTION: 'function',\n};\n","import { CodeObjectType } from './codeObjectType';\n\nfunction isExcludedParentType(type) {\n  return [CodeObjectType.HTTP, CodeObjectType.DATABASE, CodeObjectType.EXTERNAL_SERVICE].includes(\n    type\n  );\n}\n\nexport default function codeObjectId(codeObject, tokens = []) {\n  const { parent } = codeObject;\n\n  // If it's a route, query, or external service we don't need to include the parent name\n  //  because it's always the same ('HTTP server requests' for route and 'Database' for queries).\n  // This mirrors the VS Code implementation.\n  if (parent && !isExcludedParentType(parent.type)) {\n    codeObjectId(parent, tokens);\n\n    let separator;\n    switch (codeObject.parent.type) {\n      case CodeObjectType.PACKAGE:\n        separator = '/';\n        break;\n      case CodeObjectType.CLASS:\n        separator = '::';\n        break;\n      default:\n        separator = '->';\n    }\n\n    if (codeObject.type === CodeObjectType.FUNCTION) {\n      separator = 'static' in codeObject && codeObject.static ? '.' : '#';\n    }\n\n    tokens.push(separator);\n  }\n\n  tokens.push(codeObject.name);\n\n  return tokens;\n}\n","// eslint-disable-next-line import/extensions\nimport sha256 from 'crypto-js/sha256.js';\nimport analyze from './sql/analyze';\nimport { Buffer } from 'buffer';\n\nfunction isLogPathsEnabled() {\n  try {\n    return process.env.APPMAP_LOG_EXTERNAL_PATH === 'true';\n  } catch (e) {\n    if (e instanceof ReferenceError) return false;\n\n    console.warn(e);\n  }\n}\n\nconst LogPaths = isLogPathsEnabled();\nexport const hasProp = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function isFalsey(valueObj) {\n  if (!valueObj) {\n    return true;\n  }\n  if (valueObj.class === 'FalseClass') {\n    return true;\n  }\n  if (valueObj.class === 'Array' && valueObj.value === '[]') {\n    return true;\n  }\n  if (valueObj.value === '') {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isCommand(event) {\n  if (event.http_server_request) {\n    return true;\n  }\n  if (event.codeObject.labels.has('command')) {\n    return true;\n  }\n  return false;\n}\n\nexport function capitalizeString(str) {\n  if (typeof str !== 'string') {\n    return '';\n  }\n\n  return str.slice(0, 1).toUpperCase() + str.slice(1).toLowerCase();\n}\n\nexport function getHttpLabel(event) {\n  if (hasProp(event, 'http_server_request') === false) {\n    return null;\n  }\n\n  const requestMethod = event.http_server_request.request_method;\n  const pathInfo = event.http_server_request.path_info;\n  let label;\n\n  try {\n    // the url is fake, we only care about the path info anyway\n    const url = new URL(pathInfo, 'http://hostname');\n    label = `${requestMethod} ${url.pathname}`;\n  } catch (ex) {\n    label = 'HTTP Request';\n  }\n\n  return label;\n}\n\nconst sqlLabels = new Set([\n  'insert',\n  'update',\n  'select',\n  'delete',\n  'alter',\n  'create',\n  'drop',\n  'rename',\n  'truncate',\n  'replace',\n  'savepoint',\n  'release',\n  'rollback',\n  'lock',\n  'unlock',\n  'set',\n  'start',\n  'call',\n  'delete',\n  'do',\n  'perform',\n  'handler',\n  'load',\n  'purge',\n  'reset',\n  'prepare',\n  'execute',\n  'deallocate',\n  'xa',\n]);\n\nexport function getSqlLabelFromString(sqlString) {\n  const sqlChars = [...sqlString.trimLeft()];\n  if (sqlChars.length > 0 && sqlChars[0] === '(') {\n    // if the query is wrapped in parenthesis, drop the opening parenthesis\n    // it doesn't matter if we leave a hanging closing parenthesis.\n    // e.g. (SELECT 1);\n\n    sqlChars.shift();\n  }\n\n  // drop sub-queries and parenthesized expressions\n  let depth = 0;\n  const topLevelSql = sqlChars\n    .reduce((arr, c) => {\n      if (c === '(') {\n        depth += 1;\n      }\n\n      if (depth === 0) {\n        arr.push(c);\n      }\n\n      if (c === ')') {\n        depth -= 1;\n      }\n\n      return arr;\n    }, [])\n    .join('');\n\n  let queryType = null;\n  if (topLevelSql.search(/\\s/) === -1) {\n    // There's only a single token\n    // e.g. BEGIN, COMMIT, CHECKPOINT\n    queryType = topLevelSql;\n  } else {\n    // convert non-word sequences to spaces and split by space\n    // find the first known token\n    queryType = topLevelSql\n      .replace(/[^\\w]+/g, ' ')\n      .toLowerCase()\n      .split(' ')\n      .find((t) => sqlLabels.has(t));\n  }\n\n  return ['SQL', capitalizeString(queryType) || null].join(' ');\n}\n\nexport function getSqlLabel(event) {\n  if (hasProp(event, 'sql_query') === false) {\n    return null;\n  }\n\n  return getSqlLabelFromString(event.sql_query.normalized_sql || event.sql_query.sql || '');\n}\n\nexport function getLabel(event) {\n  let label = getHttpLabel(event);\n  if (!label) {\n    label = getSqlLabel(event);\n  }\n  return label;\n}\n\nexport function hashify(obj) {\n  const clone = { ...obj };\n  Object.keys(obj).forEach((key) => {\n    const val = obj[key];\n    if (Array.isArray(val)) {\n      clone[key] = new Set(val);\n    } else if (val instanceof Set) {\n      clone[key] = val;\n    } else if (val && typeof val === 'object') {\n      clone[key] = hashify(val);\n    } else {\n      clone[key] = val;\n    }\n  });\n  return clone;\n}\n\nconst REPOSITORY_RESOLVERS = {\n  github: (d) => {\n    const match = d.url.match(/github.com[:|/]?(.*).git/);\n    if (!match || match.length <= 1) {\n      return null;\n    }\n\n    const hash = typeof d.lineNumber === 'number' ? `#L${d.lineNumber}` : '';\n    return `https://github.com/${match[1]}/blob/${d.commit}/${d.path}${hash}`;\n  },\n};\n\nexport function getRepositoryUrl(url, path, commit = 'master', lineNumber = null) {\n  if (url && path) {\n    const d = { url, path, lineNumber, commit };\n    const resolvers = Object.values(REPOSITORY_RESOLVERS);\n    for (let i = 0; i < resolvers.length; i += 1) {\n      const repositoryUrl = resolvers[i](d);\n      if (repositoryUrl) {\n        return repositoryUrl;\n      }\n    }\n  }\n\n  return null;\n}\n\nconst UPPER = 0x1;\nconst LOWER = 0x10;\nconst getCase = (char) => (/[A-Z]/.exec(char) === null ? LOWER : UPPER);\nconst getCasePattern = (str) => {\n  if (str.length <= 2) {\n    return null;\n  }\n\n  return {\n    firstCase: getCase(str[0]),\n    secondCase: getCase(str[1]),\n  };\n};\n\nconst splitCamelCase = (str) => {\n  const strLen = str.length;\n  if (strLen < 1) {\n    return [];\n  }\n\n  const casePattern = getCasePattern(str);\n  if (!casePattern) {\n    return [str];\n  }\n\n  const { firstCase, secondCase } = casePattern;\n  const ret = [];\n  let matched = false;\n  for (let i = 2; i < strLen; i += 1) {\n    const charCase = getCase(str[i]);\n    if (charCase === UPPER) {\n      if (firstCase === LOWER || secondCase === LOWER) {\n        const token = str.slice(0, i);\n        ret.push(token);\n        ret.push(...splitCamelCase(str.slice(i)));\n        matched = true;\n        break;\n      }\n    } else if (charCase === LOWER && firstCase === UPPER && secondCase === UPPER) {\n      const token = str.slice(0, i - 1);\n      ret.push(token);\n      ret.push(...splitCamelCase(str.slice(i - 1)));\n      matched = true;\n      break;\n    }\n  }\n\n  if (!matched) {\n    ret.push(str);\n  }\n\n  return ret;\n};\n\n// Builds the fully qualified function name of a function (static or instance) within a\n// fully qualified class name.\nexport function fullyQualifiedFunctionName(event) {\n  const label = getLabel(event);\n  if (label) {\n    return label;\n  }\n\n  return event.toString();\n}\n\n// tokenizeIdentifier returns tokens of an identifier split by non-alphanumeric and camel casing\n// example:\n//  someMethodName   -> [ 'some', 'method', 'name' ]\n//  some_method_name -> [ 'some', 'method', 'name' ]\n//  org.company.MyPackage.MyClass -> [ 'org', 'company', 'My', 'Package', 'My', 'Class']\nexport function tokenizeIdentifier(id) {\n  const ret = [];\n\n  // Split first by non-alphanumeric tokens\n  const tokens = (id || '').split(/[$.:#\\-_]/);\n\n  // Split remaining tokens by camel case\n  tokens.forEach((token) => {\n    ret.push(...splitCamelCase(token));\n  });\n\n  return ret;\n}\n\nexport function addHiddenProperty(obj, property, opts) {\n  if (!Object.hasOwnProperty.call(obj, '$hidden')) {\n    Object.defineProperty(obj, '$hidden', {\n      enumerable: false,\n      writable: false,\n      value: {},\n    });\n  }\n\n  Object.defineProperty(obj.$hidden, property, {\n    enumerable: false,\n    writable: true,\n    ...opts,\n  });\n}\n\nexport function buildLabels(classMap, events) {\n  const result = {};\n\n  function addLabel(label, obj, type, target) {\n    /* eslint-disable no-param-reassign */\n    if (!obj[label]) {\n      obj[label] = {};\n    }\n\n    if (!obj[label][type]) {\n      obj[label][type] = [];\n    }\n\n    obj[label][type].push(target);\n    /* eslint-enable no-param-reassign */\n  }\n\n  classMap.codeObjects\n    .filter((obj) => obj.labels.size)\n    .forEach((codeObject) => {\n      Array.from(codeObject.labels).forEach((label) => {\n        addLabel(label, result, codeObject.type, codeObject);\n      });\n    });\n\n  events\n    .filter((event) => event.isCall() && event.labels.size)\n    .forEach((event) => {\n      Array.from(event.labels).forEach((label) => {\n        addLabel(label, result, 'event', event);\n      });\n    });\n\n  return result;\n}\n\n// sizeof returns a naive byte count for an object when serialized.\n// I was using an external library for this (object-sizeof), but getting results off by a factor of\n// ~2. This is awfully wasteful, slow and inaccurate but it works for now. -DB\nexport const sizeof = (obj) => JSON.stringify(obj).length;\n\n// Returns a unique 'hash' (or really, a key) tied to the event's core identity: SQL, HTTP, or a\n// specific method on a specific class. This is _really_ naive. The idea is that this better finds\n// a singular change versus an existing object that has been removed and a new object added in its\n// place.\nexport function identityHashEvent(e) {\n  if (e.httpServerRequest) {\n    return 'http';\n  }\n\n  const { sqlQuery } = e;\n  if (sqlQuery) {\n    const queryOps = analyze(sqlQuery);\n    const content = ['sql', queryOps.action, ...queryOps.tables].filter(Boolean).join('');\n    return sha256(content).toString();\n  }\n\n  return e.toString();\n}\n\nexport function resolveDifferences(arr1, arr2) {\n  let arr1Index = 0;\n  let arr2Index = 0;\n\n  for (;;) {\n    const a = arr1[arr1Index];\n    const b = arr2[arr2Index];\n    if (!a && !b) {\n      return;\n    }\n\n    if (typeof a === 'undefined') {\n      arr1.push(null);\n      arr1Index += 1;\n      arr2Index += 1;\n      continue; // eslint-disable-line no-continue\n    }\n\n    if (typeof b === 'undefined') {\n      arr2.push(null);\n      arr1Index += 1;\n      arr2Index += 1;\n      continue; // eslint-disable-line no-continue\n    }\n\n    const hashA = a.identityHash;\n    const hashB = b.identityHash;\n    if (hashA !== hashB) {\n      let instancesA = 0;\n      for (let i = arr1Index + 1; i < arr1.length; i += 1) {\n        instancesA += arr1[i].identityHash === hashA ? 1 : 0;\n      }\n\n      let instancesB = 0;\n      for (let i = arr2Index + 1; i < arr2.length; i += 1) {\n        instancesB += arr2[i].identityHash === hashA ? 1 : 0;\n      }\n\n      if (instancesA >= instancesB) {\n        arr2.splice(arr2Index, 0, null);\n      } else if (instancesA < instancesB) {\n        arr1.splice(arr1Index, 0, null);\n      } // eslint-disable-line no-continue\n    }\n\n    arr1Index += 1;\n    arr2Index += 1;\n  }\n}\n\nexport function getRootEvents(eventArray) {\n  return eventArray.filter((e) => e.isCall() && !e.parent);\n}\n\nfunction isEmpty(value) {\n  if (value === undefined || value === null) {\n    return true;\n  }\n\n  if (Array.isArray(value) || typeof value === 'string') {\n    return value.length === 0;\n  }\n\n  if (value instanceof Set || value instanceof Map) {\n    return value.size === 0;\n  }\n\n  if (typeof value === 'object') {\n    return Object.values(value).every(isEmpty);\n  }\n\n  return false;\n}\n\nexport function transformToJSON(dataKeys, obj) {\n  return dataKeys.reduce((memo, key) => {\n    const value = obj[key];\n    if (isEmpty(value)) {\n      // nop\n    } else if (value instanceof Set) {\n      memo[key] = [...value];\n    } else {\n      memo[key] = value;\n    }\n    return memo;\n  }, {});\n}\n\nexport function base64UrlDecode(encodedText) {\n  const buffer = Buffer.from(encodedText, 'base64');\n  return buffer.toString('utf-8');\n}\n\nexport function base64UrlEncode(text) {\n  const buffer = Buffer.from(text, 'utf-8');\n  return buffer.toString('base64').replace(/=/g, '').replace(/_/g, '/').replace(/-/g, '+');\n}\n\nconst SeenPaths = new Set();\nfunction logPath(path, status, reason) {\n  if (!LogPaths) return;\n\n  if (!SeenPaths.has(path)) {\n    SeenPaths.add(path);\n    process.stderr.write(`${status}: ${path}`);\n    if (reason) process.stderr.write(` (${reason})`);\n    process.stderr.write('\\n');\n  }\n}\n\n// Use heuristic methods to determine if the code location is part of the project.\n// There are a lot of weird edge cases here. It would be better if the AppMap itself would\n// definitively report local (project) vs non-project code, but that isn't yet the case.\nexport function isLocalPath(location, disallowedFolders = []) {\n  if (!location) return { isLocal: false };\n\n  // Remove drive letter\n  if (/^[a-zA-Z]:[\\\\/]/.test(location)) location = location.slice(2);\n\n  // Split into path and line number\n  let [path, lineno] = location.split(':');\n\n  // <internal:pack>:308\n  if (location.includes('<')) {\n    logPath(location, 'remote', `includes <`);\n  }\n\n  if ((!lineno || isNaN(parseInt(lineno, 10))) && path.split(/[\\\\/]/).length === 1) {\n    logPath(location, 'remote', `no line number and no path separator chars`);\n    return { isLocal: false };\n  }\n\n  if (path.length === 0) {\n    logPath(location, 'remote', `zero-length`);\n    return { isLocal: false };\n  }\n\n  // Example: <internal:pack>:308\n  if (path.charAt(0) === '<') {\n    logPath(location, 'remote', `starts with <`);\n    return { isLocal: false };\n  }\n\n  if (['/', '\\\\'].includes(path.charAt(0))) {\n    logPath(location, 'remote', `starts with ${path.charAt(0)}`);\n    return { isLocal: false };\n  }\n\n  if (/^\\.[/\\\\]/.test(path)) path = path.substring(2);\n\n  for (let folder of disallowedFolders) {\n    if (path.startsWith(`${folder}/`) || path.startsWith(`${folder}\\\\`)) {\n      logPath(location, 'remote', `starts with ${folder}`);\n      return { isLocal: false };\n    }\n  }\n\n  logPath(location, 'local ');\n  return { isLocal: true, path };\n}\n","// @ts-ignore\n\n// https://github.com/newrelic/newrelic-ruby-agent/blob/dev/lib/new_relic/agent/database/obfuscation_helpers.rb\n// License: https://github.com/newrelic/newrelic-ruby-agent/blob/main/LICENSE\n// Apache License 2.0\n\nconst COMMENTS_REGEXP = /(?:(?:#|--).*?(?=\\r|\\n|$))|(?:\\/\\*(?:[^/]|\\/[^*])*?(?:\\*\\/|\\/\\*.*))/gi;\n\nconst COMPONENTS_REGEXP_MAP = {\n  single_quotes: /'(?:[^']|'')*?(?:'(?!'))/g,\n  double_quotes: /\"(?:[^\"]|\"\")*?(?:\\\\\".*|\"(?!\"))/g,\n  dollar_quotes: /(\\$(?!\\d)[^$]*?\\$).*?(?:\\1|$)/g,\n  uuids: /\\{?(?:[0-9a-fA-F]-*){32}\\}?/g,\n  numeric_literals: /-?\\b(?:[0-9]+\\.)?[0-9]+([eE][+-]?[0-9]+)?\\b/g,\n  boolean_literals: /\\b(?:true|false|null)\\b/gi,\n  hexadecimal_literals: /0x[0-9a-fA-F]+/g,\n  oracle_quoted_strings: /q'\\[.*?(?:\\]'|$)|q'\\{.*?(?:\\}'|$)|q'<.*?(?:>'|$)|q'\\(.*?(?:\\)'|$)/g,\n};\n\n// We use these to check whether the query contains any quote characters\n// after obfuscation. If so, that's a good indication that the original\n// query was malformed, and so our obfuscation can't reliably find\n// literals. In such a case, we'll replace the entire query with a\n// placeholder.\nconst CLEANUP_REGEXP = {\n  mysql: /'|\"|\\/\\*|\\*\\//,\n  mysql2: /'|\"|\\/\\*|\\*\\//,\n  postgres: /'|\\/\\*|\\*\\/|\\$(?!\\?)/,\n  sqlite: /'|\\/\\*|\\*\\//,\n  cassandra: /'|\\/\\*|\\*\\//,\n  oracle: /'|\\/\\*|\\*\\//,\n  oracle_enhanced: /'|\\/\\*|\\*\\//,\n};\n\n/**\n * @type {{string: string[]}}\n */\nconst DIALECT_COMPONENTS = {\n  // @ts-ignore\n  fallback: Object.keys(COMPONENTS_REGEXP_MAP),\n  mysql: [\n    'single_quotes',\n    'double_quotes',\n    'numeric_literals',\n    'boolean_literals',\n    'hexadecimal_literals',\n  ],\n  postgres: ['single_quotes', 'dollar_quotes', 'uuids', 'numeric_literals', 'boolean_literals'],\n  sqlite: ['single_quotes', 'numeric_literals', 'boolean_literals', 'hexadecimal_literals'],\n  oracle: ['single_quotes', 'oracle_quoted_strings', 'numeric_literals'],\n  cassandra: [\n    'single_quotes',\n    'uuids',\n    'numeric_literals',\n    'boolean_literals',\n    'hexadecimal_literals',\n  ],\n};\n\nconst PLACEHOLDER = '?';\n\n/**\n * @param {string} dialect\n * @returns {RegExp}\n */\nfunction generateRegexp(dialect) {\n  const components = DIALECT_COMPONENTS[dialect];\n  const regexData = components.map((component) => COMPONENTS_REGEXP_MAP[component].source);\n  const union = `(?:${regexData.flat().join(')|(?:')})`;\n  return new RegExp(union, 'gi');\n}\n\nconst MYSQL_COMPONENTS_REGEXP = generateRegexp('mysql');\nconst POSTGRES_COMPONENTS_REGEXP = generateRegexp('postgres');\nconst SQLITE_COMPONENTS_REGEXP = generateRegexp('sqlite');\nconst ORACLE_COMPONENTS_REGEXP = generateRegexp('oracle');\nconst CASSANDRA_COMPONENTS_REGEXP = generateRegexp('cassandra');\nconst FALLBACK_REGEXP = generateRegexp('fallback');\n\nfunction detectUnmatchedPairs(obfuscated, adapter) {\n  if (CLEANUP_REGEXP[adapter]) {\n    return CLEANUP_REGEXP[adapter].test(obfuscated);\n  }\n  return CLEANUP_REGEXP.mysql.test(obfuscated);\n}\n\n/**\n * Replaces literal query parameters with parameter symbols (e.g. '?');\n *\n * @param {string} sql\n * @param {string} adapter\n * @returns {string}\n */\nexport default function normalize(sql, adapter) {\n  /** @type {RegExp[]} */ let regexp;\n  switch (adapter) {\n    case 'mysql':\n    case 'mysql2':\n      regexp = MYSQL_COMPONENTS_REGEXP;\n      break;\n    case 'postgres':\n      regexp = POSTGRES_COMPONENTS_REGEXP;\n      break;\n    case 'sqlite':\n      regexp = SQLITE_COMPONENTS_REGEXP;\n      break;\n    case 'oracle':\n    case 'oracle_enhanced':\n      regexp = ORACLE_COMPONENTS_REGEXP;\n      break;\n    case 'cassandra':\n      regexp = CASSANDRA_COMPONENTS_REGEXP;\n      break;\n    default:\n      regexp = FALLBACK_REGEXP;\n  }\n\n  let obfuscated = sql.replace(regexp, PLACEHOLDER).replace(COMMENTS_REGEXP, '');\n  if (detectUnmatchedPairs(obfuscated, adapter)) {\n    obfuscated = sql;\n  }\n  return obfuscated;\n}\n","import sqliteParser from '@appland/sql-parser';\nimport ParseError from './parseError';\nimport reportParseError from './sqlErrorHandler';\n\nexport default function parse(sql) {\n  const parseSQL = sql.replace(/\\s+returning\\s+\\*/i, '');\n  try {\n    return sqliteParser(parseSQL);\n  } catch (e) {\n    reportParseError(new ParseError(e.message, parseSQL));\n    return null;\n  }\n}\n","export default class ParseError extends Error {\n  constructor(message, sql) {\n    super(message);\n\n    this.sql = sql;\n  }\n\n  toString() {\n    return `${this.message}: ${this.sql}`;\n  }\n}\n","let warnedAboutSqlErrorHandler = false;\nlet sqlErrorHandler;\n\nexport function getSQLErrorHandler() {\n  return sqlErrorHandler;\n}\n\nexport function setSQLErrorHandler(handler) {\n  if (sqlErrorHandler)\n    console.warn(`Replacing existing sqlErrorHandler ${sqlErrorHandler} with ${handler}`);\n\n  sqlErrorHandler = handler;\n}\n\nexport default function reportParseError(parseError) {\n  if (sqlErrorHandler) {\n    sqlErrorHandler(parseError);\n    return;\n  }\n\n  if (!warnedAboutSqlErrorHandler) {\n    console.debug('No SQL error handler was set. SQL errors will be logged to the console.');\n    console.debug('Set a SQL error handling by calling setSQLErrorHandler(handler).');\n    warnedAboutSqlErrorHandler = true;\n  }\n\n  console.debug(parseError);\n}\n","/* eslint-disable no-inner-declarations */\nimport normalize from './normalize';\nimport parseAST from './parse';\n\nexport default function analyze(sql) {\n  const ast = parseAST(sql);\n  if (!ast) {\n    return null;\n  }\n\n  const actions = [];\n  const columns = [];\n  const tables = [];\n  let joins = 0;\n\n  function parseQuery(statement) {\n    if (statement === null) return;\n\n    const tokens = ['type', 'variant']\n      .map((propertyName) => statement[propertyName])\n      .filter(Boolean);\n\n    const key = tokens.join('.');\n    // eslint-disable-next-line no-use-before-define\n    let parser = parsers[key];\n    if (!parser) {\n      // eslint-disable-next-line no-use-before-define\n      parser = parseStatement;\n    }\n\n    const parserList = Array.isArray(parser) ? parser : [parser];\n    parserList.forEach((prs) => prs(statement));\n  }\n\n  function parseStatement(statement) {\n    if (statement === null) {\n      console.warn(`Ignoring request to parse null statement in query ${sql}`);\n      return;\n    }\n\n    const reservedWords = ['type', 'variant', 'name', 'value'];\n    Object.keys(statement)\n      .filter((property) => !reservedWords.includes(property))\n      .map((propertyName) => statement[propertyName])\n      .forEach((property) => {\n        if (Array.isArray(property)) {\n          property.forEach(parseQuery);\n        } else if (typeof property === 'object') {\n          parseQuery(property);\n        } else if (typeof property === 'string' || typeof property === 'boolean') {\n          // pass\n        } else {\n          console.warn(`Unrecognized subexpression: ${typeof property} ${property}`);\n        }\n      });\n  }\n\n  function parseList(listElements, statement) {\n    listElements.forEach((listElement) => {\n      const subExpression = statement[listElement];\n      if (Array.isArray(subExpression)) {\n        subExpression.forEach(parseQuery);\n      } else if (typeof subExpression === 'object') {\n        parseQuery(subExpression);\n      } else {\n        console.warn(`Unrecognized subexpression: ${subExpression}`);\n      }\n    });\n  }\n\n  const nop = () => {};\n\n  function parseIdentifierExpression(statement) {\n    if (statement.format === 'table') {\n      tables.push(statement.name);\n    }\n    parseList(['columns'], statement);\n  }\n\n  function recordAction(action) {\n    return () => {\n      actions.push(action);\n    };\n  }\n\n  const parsers = {\n    'literal.text': nop,\n    'literal.decimal': nop,\n    'identifier.star': (statement) => columns.push(statement.name),\n    'identifier.column': (statement) => columns.push(statement.name),\n    'identifier.table': (statement) => tables.push(statement.name),\n    'identifier.expression': parseIdentifierExpression,\n    'statement.select': [recordAction('select'), parseStatement],\n    'statement.insert': [recordAction('insert'), parseStatement],\n    'statement.update': [recordAction('update'), parseStatement],\n    'statement.delete': [recordAction('delete'), parseStatement],\n    'statement.pragma': nop,\n    'map.join': [\n      (statement) => {\n        joins += statement.map.length;\n      },\n      parseStatement,\n    ],\n  };\n\n  parseQuery(ast);\n\n  function unique(list) {\n    return [...new Set(list)];\n  }\n  const uniqueActions = unique(actions).sort();\n\n  return {\n    actions: uniqueActions,\n    tables: unique(tables).sort(),\n    columns: unique(columns).sort(),\n    joinCount: joins,\n  };\n}\n\n// returns a JSON of SQL query AST with all literals replaced by variables and all variable names\n// removed. If the query cannot be parsed, returns a best-effort normalized SQL string.\nexport function abstractSqlAstJSON(query, databaseType) {\n  const ast = parseAST(query);\n  if (!ast) return normalize(query, databaseType);\n\n  return JSON.stringify(ast, (_, value) => {\n    if (value === null) return null;\n\n    switch (value.type) {\n      case 'variable':\n      case 'literal':\n        return { type: 'variable' };\n      default:\n        return value;\n    }\n  });\n}\n","import codeObjectId from './codeObjectId';\nimport { CodeObjectType } from './codeObjectType';\nimport { addHiddenProperty, getSqlLabelFromString, transformToJSON } from './util';\n\nexport default class CodeObject {\n  constructor(data, parent) {\n    this.data = { ...data };\n\n    // Include all raw data by default, and selectively remove some fields\n    // that aren't appropriate to all types. This way, any mistakes in JSON stringification\n    // will be extra data rather than missing data.\n    this.dataKeys = Object.keys(data).filter(\n      (item) => !['dynamic', 'static', 'location', 'database_type'].includes(item)\n    );\n    this.dataKeys.push('children');\n    if (data.type === CodeObjectType.FUNCTION) {\n      this.dataKeys.push('static');\n      this.dataKeys.push('location');\n    }\n    if (data.type === CodeObjectType.QUERY) {\n      this.dataKeys.push('database_type');\n    }\n\n    if (!(this.data.labels instanceof Set)) {\n      this.data.labels = new Set(this.data.labels);\n    }\n\n    this.children = [];\n    if (parent) {\n      parent.children.push(this);\n    }\n\n    addHiddenProperty(this, 'parent', { value: parent });\n    addHiddenProperty(this, 'events', { writable: false, value: [] });\n    addHiddenProperty(this, 'id');\n    addHiddenProperty(this, 'fqid');\n  }\n\n  get id() {\n    if (!this.$hidden.id) {\n      this.$hidden.id = this.buildId().join('');\n    }\n    return this.$hidden.id;\n  }\n\n  get name() {\n    return this.data.name;\n  }\n\n  get type() {\n    return this.data.type;\n  }\n\n  get static() {\n    return this.data.static;\n  }\n\n  get location() {\n    return this.data.location;\n  }\n\n  get labels() {\n    return this.data.labels;\n  }\n\n  get events() {\n    return this.$hidden.events;\n  }\n\n  get parent() {\n    return this.$hidden.parent;\n  }\n\n  set parent(val) {\n    this.$hidden.parent = val;\n  }\n\n  // Gets the source locations for this code object. For a package, no source locations are returned\n  // (there would be too many to be useful). For a class, the paths to all files which add methods to the class are\n  // returned. For a function, the path and line number is returned.\n  get locations() {\n    switch (this.type) {\n      case CodeObjectType.CLASS:\n        return Array.from(this.classLocations()).sort();\n      case CodeObjectType.FUNCTION:\n        return [this.location];\n      default:\n        return [];\n    }\n  }\n\n  get packageOf() {\n    return [this, ...this.ancestors()]\n      .filter((obj) => obj.type === CodeObjectType.PACKAGE)\n      .map((obj) => obj.name)\n      .reverse()\n      .join('/');\n  }\n\n  get classOf() {\n    return [this, ...this.ancestors()]\n      .filter((obj) => obj.type === CodeObjectType.CLASS)\n      .map((obj) => obj.name)\n      .reverse()\n      .join('::');\n  }\n\n  get classObject() {\n    return [this, ...this.ancestors()].find((obj) => obj.type === CodeObjectType.CLASS);\n  }\n\n  get packageObject() {\n    return [this, ...this.ancestors()].find((obj) => obj.type === CodeObjectType.PACKAGE);\n  }\n\n  get functions() {\n    if (this.type === CodeObjectType.CLASS) {\n      // getting the functions of a class should not return functions of nested classes\n      return this.children.filter((obj) => obj.type === CodeObjectType.FUNCTION);\n    }\n\n    return this.descendants().filter((obj) => obj.type === CodeObjectType.FUNCTION);\n  }\n\n  get classes() {\n    return [this, ...this.descendants()].filter(\n      (obj) => obj.type === CodeObjectType.CLASS && obj.functions.length\n    );\n  }\n\n  // Enumerate this code object and all its descendants, calling a function for each one. The\n  // traversal is depth-first.\n  visit(fn, stack = []) {\n    stack.push(this);\n    fn(this, stack);\n    this.children.forEach((child) => child.visit(fn, stack));\n    stack.pop();\n  }\n\n  // Enumerate this code object and all its ancestors, calling a function for each one.\n  visitAncestors(fn) {\n    let ancestor = this;\n    while (ancestor) {\n      fn(ancestor);\n      ancestor = ancestor.parent;\n    }\n  }\n\n  /**\n   * Finds the most specific descendants of a code object that have the same type.\n   * The traversal stops when encountering a child of any other type.\n   * This method is useful for retrieving children without worrying about types or deeply nested objects.\n   *\n   * For example, the 'leafs' of the package `com` may be:\n   * - com.myorg.myapp\n   * - com.myorg.myapp.api\n   *\n   * Whereas its children would only contain \"myorg\", and its descendants would include functions\n   * and classes from any other nested package.\n   *\n   */\n  leafs() {\n    const { type } = this;\n    const queue = [this];\n    const leafArray = [];\n\n    while (queue.length) {\n      const obj = queue.pop();\n      const childrenOfType = obj.children.filter((child) => child.type === type);\n\n      // If this object has children of another type, consider it the most specific of the type.\n      // For example, a package containing a class.\n      if (childrenOfType.length) {\n        queue.push(...childrenOfType);\n      }\n\n      // If, however, this object has a variety of child types, it's both a leaf and a parent\n      if (\n        (!obj.children.length && obj.type === type) ||\n        childrenOfType.length !== obj.children.length\n      ) {\n        leafArray.push(obj);\n      }\n    }\n\n    return leafArray;\n  }\n\n  /**\n   * Returns leafs of all children. Similar to the `classes` accessor, but returns children of any\n   * type.\n   *\n   * @see leafs\n   */\n  childLeafs() {\n    return this.children.map((child) => child.leafs()).flat();\n  }\n\n  buildId(tokens = []) {\n    return codeObjectId(this, tokens);\n  }\n\n  classLocations(paths = new Set()) {\n    this.children.forEach((child) => child.classLocations(paths));\n\n    if (this.type === CodeObjectType.FUNCTION && this.location) {\n      const tokens = this.location.split(':', 2);\n      paths.add(tokens[0]);\n    }\n    return paths;\n  }\n\n  toJSON() {\n    return transformToJSON(this.dataKeys, this);\n  }\n\n  static constructDataChainFromEvent(event) {\n    let elements;\n    if (event.httpServerRequest) {\n      elements = [\n        {\n          type: CodeObjectType.HTTP,\n          name: 'HTTP server requests',\n        },\n        {\n          type: CodeObjectType.ROUTE,\n          name: event.route,\n        },\n      ];\n    } else if (event.httpClientRequest) {\n      let serviceName;\n\n      try {\n        const url = new URL(event.httpClientRequest.url);\n        serviceName = url.host;\n      } catch {\n        serviceName = 'External service';\n      }\n\n      elements = [\n        {\n          type: CodeObjectType.EXTERNAL_SERVICE,\n          name: serviceName,\n        },\n        {\n          type: CodeObjectType.EXTERNAL_ROUTE,\n          name: event.route,\n        },\n      ];\n    } else if (event.sqlQuery) {\n      elements = [\n        {\n          type: CodeObjectType.DATABASE,\n          name: 'Database',\n        },\n        {\n          type: CodeObjectType.QUERY,\n          name: event.sqlQuery,\n          database_type: event.sql.database_type,\n        },\n      ];\n    } else {\n      elements = [\n        {\n          type: CodeObjectType.CLASS,\n          name: event.definedClass,\n        },\n        {\n          type: CodeObjectType.FUNCTION,\n          name: event.methodId,\n          static: event.isStatic,\n          location: '',\n        },\n      ];\n    }\n\n    // Flag this object as having been created dynamically\n    const queue = [...elements];\n    while (queue.length) {\n      const obj = queue.pop();\n      obj.dynamic = true;\n      if (obj.children) {\n        obj.children.forEach((child) => queue.push(child));\n      }\n    }\n\n    return elements;\n  }\n\n  get inboundConnections() {\n    return this.allEvents.filter((e) => e.parent).map((e) => e.parent.codeObject);\n  }\n\n  get outboundConnections() {\n    return this.allEvents\n      .map((e) => e.children)\n      .flat()\n      .map((e) => e.codeObject);\n  }\n\n  get sqlQueries() {\n    return this.allEvents\n      .map((e) => e.children)\n      .flat()\n      .filter((e) => e.sql)\n      .map((e) => e.codeObject);\n  }\n\n  get prettyName() {\n    switch (this.type) {\n      case CodeObjectType.FUNCTION:\n        return `${this.classOf}${this.static ? '.' : '#'}${this.name}`;\n      case CodeObjectType.CLASS:\n        return this.classOf;\n      case CodeObjectType.PACKAGE:\n        return this.packageOf;\n      case CodeObjectType.QUERY:\n        return getSqlLabelFromString(this.name);\n      default:\n        return this.name;\n    }\n  }\n\n  get fqid() {\n    if (!this.$hidden.fqid) {\n      this.$hidden.fqid = `${this.type}:${this.id}`;\n    }\n    return this.$hidden.fqid;\n  }\n\n  // The zone of deprecation.\n  // ------------------------\n\n  // This function is deprecated, because it allocates all events of all descendants into a new\n  // array for each invocation.\n  // Use `CodeObject.visit()` and `CodeObject.events` instead. A functional style is both more\n  // idiomatic and more efficient.\n  get allEvents() {\n    return [this, ...this.descendants()].map((obj) => obj.events).flat();\n  }\n\n  // This function is deprecated, because it allocates all descendants into a new array for each invocation.\n  // Use `CodeObject.visit()` instead. A functional style is both more idiomatic and more efficient.\n  descendants() {\n    const queue = [...this.children];\n    const children = [];\n\n    while (queue.length) {\n      const child = queue.pop();\n      children.push(child);\n      queue.push(...child.children);\n    }\n\n    return children;\n  }\n\n  // This function is deprecated, because it allocates all descendants into a new array for each invocation.\n  // Use `CodeObject.visitAncestors()` instead. A functional style is both more idiomatic and more efficient.\n  ancestors() {\n    let currentObject = this.parent;\n    const parents = [];\n\n    while (currentObject) {\n      parents.push(currentObject);\n      currentObject = currentObject.parent;\n    }\n\n    return parents;\n  }\n}\n","import CodeObject from './codeObject';\nimport { CodeObjectType } from './codeObjectType';\n\nfunction indexCodeObject(co, codeObjects, codeObjectsById) {\n  codeObjects.push(co);\n  codeObjectsById[co.id] = co;\n}\n\nexport default class ClassMap {\n  constructor(classMap) {\n    this.codeObjectsByLocation = {};\n    this.codeObjects = [];\n    this.codeObjectsById = {};\n\n    const buildCodeObject = (data, parent = null) => {\n      const co = new CodeObject(data, parent);\n      indexCodeObject(co, this.codeObjects, this.codeObjectsById);\n\n      (data.children || []).forEach((child) => {\n        buildCodeObject(child, co);\n      });\n\n      if (co.type !== 'package') {\n        co.locations.forEach((location) => {\n          let codeObjects = this.codeObjectsByLocation[location];\n          if (!codeObjects) {\n            codeObjects = [];\n            this.codeObjectsByLocation[location] = codeObjects;\n          }\n          codeObjects.push(co);\n        });\n      }\n\n      return co;\n    };\n\n    this.roots = classMap.map((root) => buildCodeObject(root));\n  }\n\n  visit(fn) {\n    this.roots.forEach((co) => co.visit(fn));\n  }\n\n  search(query) {\n    const queryLower = query.toLowerCase();\n    return this.codeObjects.filter((co) => co.id.toLowerCase().indexOf(queryLower) !== -1);\n  }\n\n  codeObjectFromId(id) {\n    return this.codeObjectsById[id];\n  }\n\n  codeObjectsAtLocation(location) {\n    return this.codeObjectsByLocation[location] || [];\n  }\n\n  codeObjectFromEvent(event) {\n    let codeObject;\n    // These types of events should not be reporting path and lineno, but sometimes\n    // they do.\n    if (!(event.httpServerRequest || event.httpClientRequest || event.sql)) {\n      const { path, lineno } = event;\n      const location = [path, lineno].filter((e) => e).join(':');\n      if (location !== '') {\n        const codeObjects = this.codeObjectsAtLocation(location);\n        codeObject = codeObjects.find((o) => o.name === event.methodId);\n        if (codeObject) {\n          return codeObject;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  // Returns the first root code object of a given type or null if it doesn't exist\n  root(type) {\n    return this.roots.find((obj) => obj.type === type);\n  }\n\n  // Returns the root HTTP code object if it exists\n  get httpObject() {\n    return this.root(CodeObjectType.HTTP);\n  }\n\n  // Returns the root SQL code object if it exists\n  get sqlObject() {\n    return this.root(CodeObjectType.DATABASE);\n  }\n\n  // Binds an event array to code objects and vice versa. This allows use of\n  // direct accessors: `Event.codeObject` and `CodeObject.events`. Additionally,\n  // it guarantees non-null accessors, meaning it will construct a code object\n  // for an event if it previously did not exist.\n  bindEvents(events) {\n    if (!events || !Array.isArray(events) || !events.length) {\n      return;\n    }\n\n    const validCodeObjects = new Set();\n    events\n      .filter((e) => e.isCall())\n      .forEach((e) => {\n        let codeObject = this.codeObjectFromEvent(e);\n        if (!codeObject) {\n          const findOrCreateCodeObject = (data, codeObjectArray, parent) => {\n            // TODO: This ignores static/non-static function collisions and function overloads, though this method\n            // is never currently called in a context where those edge cases exist.\n            let newCodeObject = codeObjectArray.find(\n              (obj) => obj.type === data.type && obj.name === data.name\n            );\n\n            if (!newCodeObject) {\n              newCodeObject = new CodeObject(data, parent);\n              if (!parent) {\n                this.roots.push(newCodeObject);\n              }\n              indexCodeObject(newCodeObject, this.codeObjects, this.codeObjectsById);\n            }\n\n            return newCodeObject;\n          };\n\n          const dataElements = CodeObject.constructDataChainFromEvent(e);\n          let parent = null;\n          dataElements.forEach((dataElement) => {\n            parent = findOrCreateCodeObject(\n              dataElement,\n              parent ? parent.children : this.roots,\n              parent\n            );\n          });\n          codeObject = parent;\n        }\n\n        e.codeObject = codeObject;\n        codeObject.events.push(e);\n\n        codeObject.visitAncestors((obj) => validCodeObjects.add(obj));\n      });\n\n    this.codeObjects = this.codeObjects.filter((obj) => validCodeObjects.has(obj));\n\n    function filterCodeObjects(objectsList, allObjects) {\n      return objectsList.filter((obj) => {\n        if (allObjects.has(obj)) {\n          obj.children = filterCodeObjects(obj.children, allObjects);\n          return true;\n        }\n        return false;\n      });\n    }\n\n    this.roots = filterCodeObjects(this.roots, validCodeObjects);\n\n    Object.keys(this.codeObjectsByLocation).forEach((obj) => {\n      if (!validCodeObjects.has(obj)) {\n        delete this.codeObjectsByLocation[obj];\n      }\n    });\n\n    Object.entries(this.codeObjectsById).forEach(([id, obj]) => {\n      if (!validCodeObjects.has(obj)) {\n        delete this.codeObjectsById[id];\n      }\n    });\n  }\n\n  toJSON() {\n    return this.roots;\n  }\n}\n","import { addHiddenProperty } from '../util';\n\n// Deprecated. Prefer `Event` instead.\nclass CallNode {\n  constructor(input = {}, output = {}, caller = null, labels = []) {\n    this.input = input;\n    this.output = output;\n    this.children = [];\n    this.labels = labels;\n\n    // Cyclic references shall not be enumerable\n    addHiddenProperty(this, 'caller', { value: caller });\n  }\n\n  get caller() {\n    return this.$hidden.caller;\n  }\n\n  set caller(value) {\n    this.$hidden.$hiddencaller = value;\n  }\n\n  clone() {\n    const input = { ...this.input };\n    const output = { ...this.output };\n    const labels = [...this.labels];\n    const newNode = new CallNode(input, output, null, labels);\n\n    if (this.displayName) {\n      newNode.displayName = this.displayName;\n    }\n\n    this.children.forEach((child) => {\n      const newChild = child.clone();\n      newNode.addChild(newChild);\n      newChild.caller = newNode;\n    });\n\n    return newNode;\n  }\n\n  addChild(node) {\n    this.children.push(node);\n  }\n\n  // Replace a given child with a different set of children.\n  replaceChild(child, children) {\n    const idx = this.children.indexOf(child);\n    if (idx === -1) {\n      throw new Error(`${child} not found in call tree`);\n    }\n\n    this.children.splice(idx, 1, ...children);\n    /* eslint-disable no-param-reassign */\n    children.forEach((c) => {\n      c.caller = this;\n    });\n    child.caller = null;\n    /* eslint-enable no-param-reassign */\n  }\n\n  removeChild(child) {\n    const childIndex = this.children.indexOf(child);\n    if (childIndex < 0) {\n      throw new Error(`${child} found orphaned by ${this} !`);\n    }\n    this.children.splice(childIndex, 1);\n  }\n\n  postOrderForEach(fn, stack = []) {\n    stack.push(this);\n    const children = [...this.children];\n    children.forEach((child) => child.postOrderForEach(fn, stack));\n    fn(this, stack);\n    stack.pop(this);\n  }\n\n  preOrderForEach(fn, stack = []) {\n    stack.push(this);\n    fn(this, stack);\n    const children = [...this.children];\n    children.forEach((child) => child.preOrderForEach(fn, stack));\n    stack.pop(this);\n  }\n\n  forEach(fn) {\n    this.postOrderForEach(fn);\n  }\n\n  // filter returns a tree in which all nodes match a condition. If a node fails the\n  // condition, its children are adopted by it's parent.\n  filter(conditionFn) {\n    const root = this.clone();\n    root.forEach((node, stack) => {\n      if (node.isRoot()) {\n        return;\n      }\n\n      if (!conditionFn(node, stack)) {\n        const parent = node.caller;\n        parent.replaceChild(node, node.children);\n      }\n    });\n\n    return root;\n  }\n\n  // include returns a tree in which all leaf nodes match a condition.\n  // If a node passes the condition, the node and all of its parents are retained\n  // in the tree. If it fails, the node and its children are removed from the tree.\n  // Note that if a node passes the condition, the condition will not be evaluated\n  // for that node's parent nodes, since they are already marked as retained.\n  include(conditionFn) {\n    /* eslint-disable no-param-reassign */\n    const root = this.clone();\n    root.postOrderForEach((node, stack) => {\n      if (node.isRoot()) {\n        return;\n      }\n\n      if (node.marked_include && node.caller) {\n        node.caller.marked_include = true;\n        return;\n      }\n\n      node.marked_include = conditionFn(node, stack);\n      if (node.marked_include) {\n        if (node.caller) {\n          node.caller.marked_include = true;\n        }\n        return;\n      }\n\n      if (node.caller) {\n        node.caller.removeChild(node);\n      }\n    });\n\n    root.postOrderForEach((node) => {\n      delete node.marked_include;\n    });\n\n    return root;\n    /* eslint-enable no-param-reassign */\n  }\n\n  // exclude returns a tree in which all nodes that match a condition are removed, along\n  // with their child nodes.\n  exclude(conditionFn) {\n    const root = this.clone();\n    root.forEach((node, stack) => {\n      if (node.isRoot()) {\n        return;\n      }\n\n      if (conditionFn(node, stack)) {\n        const parent = node.caller;\n        parent.removeChild(node);\n      }\n    });\n\n    return root;\n  }\n\n  // toArray returns this tree as a one dimensional array\n  toArray() {\n    const childEvents = this.children.map((child) => child.toArray()).flat();\n\n    if (this.isRoot()) {\n      return childEvents;\n    }\n\n    return [this, ...childEvents];\n  }\n\n  // find calls find recursively on all children\n  // iterates in pre-order\n  find(fn) {\n    if (fn(this)) {\n      return this;\n    }\n\n    for (let i = 0; i < this.children.length; i += 1) {\n      const match = this.children[i].find(fn);\n      if (match) {\n        return match;\n      }\n    }\n\n    return null;\n  }\n\n  // depth returns the depth of this node\n  depth() {\n    return this.ancestors().length;\n  }\n\n  // ancestors returns an array of this nodes ancestors\n  ancestors() {\n    const nodes = [];\n\n    let parent = this.caller;\n    while (parent) {\n      nodes.push(parent);\n      parent = parent.caller;\n    }\n\n    return nodes;\n  }\n\n  // returns whether or not a node has a particular node in its ancestry\n  hasAncestor(ancestor) {\n    let node = this;\n    while (node) {\n      if (node === ancestor) {\n        return true;\n      }\n      node = node.caller;\n    }\n    return false;\n  }\n\n  descendants() {\n    return [this, ...this.children.map((x) => x.descendants()).flat()];\n  }\n\n  next() {\n    if (this.children.length > 0) {\n      return this.children[0];\n    }\n\n    let child = this;\n    let parent = this.caller;\n    const fnChildIndex = (n) => n === child;\n    while (parent) {\n      const myIndex = parent.children.findIndex(fnChildIndex);\n      if (myIndex < 0) {\n        throw new Error(`${this} found orphaned by ${parent}!`);\n      }\n\n      if (myIndex < parent.children.length - 1) {\n        return parent.children[myIndex + 1];\n      }\n\n      child = parent;\n      parent = parent.caller;\n    }\n\n    return null;\n  }\n\n  previous() {\n    const parent = this.caller;\n    if (!parent) {\n      return null;\n    }\n\n    if (parent.children.length === 1) {\n      return parent;\n    }\n\n    const myIndex = parent.children.findIndex((n) => n === this);\n    if (myIndex < 0) {\n      throw new Error(`${this.input.id} found orphaned by ${parent.input.id}!`);\n    }\n\n    if (myIndex > 0) {\n      // this branch will yield our previous node\n      let candidate = parent.children[myIndex - 1];\n\n      // iterate until we find a leaf node\n      while (candidate.children.length > 0) {\n        candidate = candidate.children[candidate.children.length - 1];\n      }\n\n      return candidate;\n    }\n\n    return parent;\n  }\n\n  // return the node to the left, at given max depth\n  left(depth) {\n    const target = depth || this.depth();\n\n    // find the target or the nearest descendant\n    let current = this;\n    for (;;) {\n      const parent = current.caller;\n      if (!parent) return this;\n\n      const siblings = parent.children;\n      const i = siblings.indexOf(current);\n      if (i !== 0) {\n        current = parent.children[i - 1];\n        break;\n      } else {\n        current = parent;\n      }\n    }\n\n    // find rightmost child closest to the right depth\n    while (current.depth() !== target) {\n      const { children } = current;\n      if (children.length === 0) break;\n      current = children[children.length - 1];\n    }\n\n    return current;\n  }\n\n  // return the node to the right, at given max depth\n  right(depth) {\n    const target = depth || this.depth();\n\n    // find the target or the nearest descendant\n    let current = this;\n    for (;;) {\n      const parent = current.caller;\n      if (!parent) return this;\n\n      const siblings = parent.children;\n      const i = siblings.indexOf(current);\n      if (i !== siblings.length - 1) {\n        current = parent.children[i + 1];\n        break;\n      } else {\n        current = parent;\n      }\n    }\n\n    // find leftmost child closest to the right depth\n    while (current.depth() !== target) {\n      const { children } = current;\n      if (children.length === 0) break;\n      [current] = children;\n    }\n\n    return current;\n  }\n\n  isRoot() {\n    return this.caller === null;\n  }\n\n  count() {\n    let numNodes = 0;\n    this.forEach(() => {\n      numNodes += 1;\n    });\n    return numNodes;\n  }\n\n  get id() {\n    if (this.input && this.input.id) {\n      return this.input.id;\n    }\n    return null;\n  }\n}\n\nexport default CallNode;\n","function getListenerArray(eventSource, eventType) {\n  /* eslint-disable no-param-reassign */\n  let listeners = eventSource.listeners[eventType];\n  if (!listeners) {\n    listeners = [];\n    eventSource.listeners[eventType] = listeners;\n  }\n  return listeners;\n  /* eslint-enable no-param-reassign */\n}\n\nexport default class EventSource {\n  constructor() {\n    this.listeners = {};\n    this.anyListeners = [];\n  }\n\n  once(eventType, fn) {\n    const handlers = getListenerArray(this, eventType);\n    handlers.push({ fn, once: true });\n    return this;\n  }\n\n  on(eventType, fn) {\n    const handlers = getListenerArray(this, eventType);\n    handlers.push({ fn });\n    return this;\n  }\n\n  off(eventType, fn) {\n    const handlers = this.listeners[eventType];\n\n    if (handlers) {\n      const updatedHandlers = handlers.filter((h) => h.fn && h.fn !== fn);\n      if (updatedHandlers.length === 0) {\n        delete this.listeners[eventType];\n      } else if (updatedHandlers.length !== handlers.length) {\n        this.listeners[eventType] = updatedHandlers;\n      }\n    }\n\n    return this;\n  }\n\n  emit(eventType, data = undefined) {\n    const handlers = this.listeners[eventType];\n\n    if (handlers) {\n      let includesOnce = false;\n      handlers.forEach((handler) => {\n        if (handler.once) {\n          includesOnce = true;\n        }\n\n        try {\n          handler.fn(data);\n        } catch (e) {\n          console.error(`error occurred while executing event ${eventType}`);\n          console.error(e);\n        }\n      });\n\n      if (includesOnce) {\n        // Only reassign this value if we've encountered a handler that's run once\n        this.listeners[eventType] = this.listeners[eventType].filter((h) => !h.once);\n      }\n    }\n\n    this.anyListeners.forEach((eventSource) => eventSource.emit(eventType, data));\n\n    return this;\n  }\n\n  // Pipe events from EventSource A to EventSource B. If `eventTypes` are\n  // provided, bind only those types. Otherwise, pipe any event.\n  pipe(eventSource, ...eventTypes) {\n    if (eventTypes.length) {\n      eventTypes.forEach((type) => eventSource.on(type, (data) => this.emit(data)));\n      return this;\n    }\n\n    eventSource.any(this);\n    return this;\n  }\n\n  // Bind `eventSource` to recieve any event sent from `this`.\n  any(eventSource) {\n    this.anyListeners.push(eventSource);\n    return this;\n  }\n}\n","import CallNode from './callNode';\nimport EventSource from '../eventSource';\n\nexport default class CallTree extends EventSource {\n  constructor(events, functionLabels = () => []) {\n    super();\n\n    this.dataStore = {\n      rootEvent: this.rootNode,\n      selectedEvent: this.rootNode,\n    };\n\n    this.rootEvent = new CallNode();\n    const stack = [this.rootEvent];\n    events.forEach((e) => {\n      if (e.event !== 'call') {\n        if (stack.length > 1) {\n          stack.pop();\n        }\n        return;\n      }\n\n      const parent = stack[stack.length - 1];\n      const callNode = new CallNode(e, e.returnEvent, parent, functionLabels(e));\n      parent.addChild(callNode);\n      stack.push(callNode);\n    });\n\n    return this;\n  }\n\n  get rootEvent() {\n    return this.dataStore.rootEvent;\n  }\n\n  set rootEvent(event) {\n    this.dataStore.rootEvent = event;\n    this.emit('rootEvent', event);\n  }\n\n  get selectedEvent() {\n    return this.dataStore.selectedEvent;\n  }\n\n  set selectedEvent(event) {\n    this.dataStore.selectedEvent = event;\n    this.emit('selectedEvent', event);\n  }\n}\n","import ClassMap from './classMap';\nimport CallTree from './callTree/callTree';\nimport { buildLabels, resolveDifferences, getRootEvents } from './util';\n\n// merge contiguous changes into a single element (as an array)\nfunction groupChanges(eventArray) {\n  const events = new Set(eventArray);\n  const seen = new Set();\n  const result = [];\n\n  eventArray.forEach((e) => {\n    if (seen.has(e)) {\n      return;\n    }\n\n    seen.add(e);\n\n    const group = [e];\n    let currentEvent = e;\n    for (;;) {\n      const { nextSibling } = currentEvent;\n      if (nextSibling && events.has(nextSibling)) {\n        group.push(nextSibling);\n        seen.add(nextSibling);\n        currentEvent = nextSibling;\n      } else {\n        break;\n      }\n    }\n\n    result.push(group);\n  });\n\n  return result;\n}\n\nexport default class AppMap {\n  constructor(data) {\n    this.data = {\n      events: [],\n      classMap: [],\n      ...data,\n    };\n\n    this.classMap = new ClassMap(this.data.classMap);\n    this.callTree = new CallTree(this.events);\n    this.classMap.bindEvents(this.events);\n    this.labels = buildLabels(this.classMap, this.events);\n\n    // Establish event linked list references\n    let previousEvent;\n    this.events.forEach((e) => {\n      if (previousEvent) {\n        e.previous = previousEvent;\n        previousEvent.next = e;\n      }\n\n      previousEvent = e;\n    });\n\n    this.eventsById = this.events.reduce((acc, event) => {\n      acc[event.id] = event;\n      return acc;\n    }, {});\n\n    // Keep these fields seperate for serialization\n    delete this.data.classMap;\n  }\n\n  get version() {\n    return this.data.version;\n  }\n\n  get metadata() {\n    return this.data.metadata || {};\n  }\n\n  get name() {\n    return this.metadata.name;\n  }\n\n  get rootEvent() {\n    return this.callTree.rootEvent;\n  }\n\n  get events() {\n    return this.data.events;\n  }\n\n  getEvent(eventId) {\n    return this.eventsById[eventId];\n  }\n\n  shallowCopy() {\n    const copy = new AppMap({});\n    copy.data.events = this.data.events;\n    copy.data.metadata = this.data.metadata;\n    copy.classMap = this.classMap;\n    copy.callTree = this.callTree;\n    return copy;\n  }\n\n  // Gets an array of root events, which is all events whose parent is undefined.\n  rootEvents() {\n    return getRootEvents(this.events);\n  }\n\n  // Iterate many AppMaps at once as an event tree. This method will follow the deepest branch\n  // available, and yield the nodes at that position. Given that the tree structure may differ\n  // across AppMaps, it's possible that some nodes will be null.\n  static *multiTreeIterator(baseAppMap, workingAppMap) {\n    let baseEvent;\n    let workingEvent;\n    const baseQueue = baseAppMap.rootEvents();\n    const workingQueue = workingAppMap.rootEvents();\n\n    resolveDifferences(baseQueue, workingQueue);\n\n    for (;;) {\n      baseEvent = baseQueue.shift();\n      workingEvent = workingQueue.shift();\n\n      // If both are null, every path has been exhausted. We're done.\n      if (!baseEvent && !workingEvent) {\n        return;\n      }\n\n      // Don't bother continuing to iterate through a branch that doesn't exist in the other tree.\n      if (baseEvent && workingEvent) {\n        const baseChildren = baseEvent ? [...baseEvent.children] : [];\n        const workingChildren = workingEvent ? [...workingEvent.children] : [];\n\n        resolveDifferences(baseChildren, workingChildren);\n        baseChildren.forEach((e) => baseQueue.push(e));\n        workingChildren.forEach((e) => workingQueue.push(e));\n      }\n\n      yield [baseEvent, workingEvent];\n    }\n  }\n\n  static getDiff(baseAppMap, workingAppMap) {\n    const changeSummary = {\n      changed: [],\n      added: [],\n      removed: [],\n    };\n\n    const iter = AppMap.multiTreeIterator(baseAppMap, workingAppMap);\n    let result = iter.next();\n    while (!result.done) {\n      const [nodeBase, nodeWorking] = result.value;\n\n      if (!nodeBase) {\n        changeSummary.added.push(nodeWorking);\n      } else if (!nodeWorking) {\n        changeSummary.removed.push(nodeBase);\n      } else if (nodeBase.hash !== nodeWorking.hash) {\n        changeSummary.changed.push([nodeBase, nodeWorking]);\n      }\n\n      result = iter.next();\n    }\n\n    changeSummary.added = groupChanges(changeSummary.added);\n    changeSummary.removed = groupChanges(changeSummary.removed);\n\n    return changeSummary;\n  }\n\n  toJSON() {\n    return {\n      ...this.data,\n      classMap: this.classMap,\n    };\n  }\n}\n","import sha256 from 'crypto-js/sha256.js';\n\nexport default class HashBuilder {\n  constructor(algorithmVersion) {\n    this.hashEntries = [['algorithmVersion', algorithmVersion]];\n  }\n\n  addProperty(key, value) {\n    this.hashEntries.push([key, value]);\n  }\n\n  get canonicalString() {\n    return this.hashEntries.map((row) => row.join('=')).join('\\n');\n  }\n\n  digest() {\n    return sha256(this.hashEntries.map((r) => r.join('=')).join('')).toString();\n  }\n\n  static buildHash(algorithmName, properties) {\n    const hash = new HashBuilder(algorithmName);\n\n    Object.keys(properties)\n      .sort()\n      .forEach((key) => hash.addProperty(key, properties[key]));\n\n    return hash;\n  }\n}\n","import { addHiddenProperty, hasProp, transformToJSON } from './util';\nimport analyzeSQL, { abstractSqlAstJSON } from './sql/analyze';\nimport normalizeSQL from './sql/normalize';\nimport HashBuilder from './hashBuilder';\n\nfunction alias(obj, prop, alias) {\n  if (!obj || typeof obj[prop] === 'undefined' || typeof obj[alias] !== 'undefined') {\n    return;\n  }\n\n  Object.defineProperty(obj, alias, {\n    get() {\n      return this[prop];\n    },\n    enumerable: false,\n  });\n}\n\n// This class supercedes `CallTree` and `CallNode`. Events are stored in a flat\n// array and can also be traversed like a tree via `parent` and `children`.\nexport default class Event {\n  static contentType(...messages) {\n    const msg = messages.find((message) => (message?.headers || {})['Content-Type']);\n    if (!msg) {\n      return null;\n    }\n\n    return msg.headers['Content-Type'];\n  }\n\n  constructor(obj) {\n    let data = obj;\n\n    if (obj instanceof Event) {\n      data = { ...obj };\n\n      if (obj.$hidden.parameters) {\n        data.parameters = obj.$hidden.parameters.map((p) => ({ ...p }));\n      }\n\n      if (Array.isArray(obj.$hidden.message)) {\n        data.message = obj.$hidden.message.map((m) => ({ ...m }));\n      }\n\n      if (obj.$hidden.labels) {\n        data.labels = [...obj.$hidden.labels];\n      }\n\n      if (obj.$hidden.exceptions) {\n        data.exceptions = [...obj.$hidden.exceptions];\n      }\n    }\n\n    this.dataKeys = Object.keys(data);\n\n    // Cyclic references shall not be enumerable\n    if (data.event === 'call') {\n      addHiddenProperty(this, 'parent');\n      addHiddenProperty(this, 'children', { writable: false, value: [] });\n      addHiddenProperty(this, 'dataReferences', { writable: false, value: [] });\n      addHiddenProperty(this, 'codeObject');\n      addHiddenProperty(this, 'parameters');\n      addHiddenProperty(this, 'message');\n    }\n\n    addHiddenProperty(this, 'linkedEvent');\n    addHiddenProperty(this, 'labels');\n    addHiddenProperty(this, 'exceptions');\n    addHiddenProperty(this, 'next');\n    addHiddenProperty(this, 'previous');\n    addHiddenProperty(this, 'hash');\n    addHiddenProperty(this, 'identityHash');\n    addHiddenProperty(this, 'depth');\n    addHiddenProperty(this, 'sqlQuery');\n\n    // Backward compatibility\n    // `status_code` used to be normalized to `status` during normalization. They can now be used\n    // interchangeably.\n    alias(data.http_server_response, 'status_code', 'status');\n    alias(data.http_server_response, 'status', 'status_code');\n    alias(data.http_client_response, 'status_code', 'status');\n    alias(data.http_client_response, 'status', 'status_code');\n\n    // Data must be written last, after our properties are configured.\n    Object.assign(this, data);\n  }\n\n  get depth() {\n    if (this.$hidden.depth === undefined) {\n      let result = 0;\n      let { parent } = this;\n      while (parent) {\n        result += 1;\n        parent = parent.parent;\n      }\n      this.$hidden.depth = result;\n    }\n    return this.$hidden.depth;\n  }\n\n  get methodId() {\n    return this.method_id;\n  }\n\n  get isFunction() {\n    return this.definedClass && this.methodId;\n  }\n\n  get isStatic() {\n    return this.static;\n  }\n\n  get sql() {\n    return this.callEvent.sql_query;\n  }\n\n  get returnValue() {\n    return this.returnEvent ? this.returnEvent.return_value : undefined;\n  }\n\n  get elapsedTime() {\n    return this.returnEvent ? this.returnEvent.elapsed : undefined;\n  }\n\n  get elapsedInstrumentationTime() {\n    return this.returnEvent ? this.returnEvent.elapsed_instrumentation : undefined;\n  }\n\n  get linkedEvent() {\n    return this.$hidden.linkedEvent;\n  }\n\n  get next() {\n    return this.$hidden.next;\n  }\n\n  get previous() {\n    return this.$hidden.previous;\n  }\n\n  get parent() {\n    return this.$hidden.parent;\n  }\n\n  get children() {\n    return this.$hidden.children || [];\n  }\n\n  get codeObject() {\n    return this.callEvent.$hidden.codeObject;\n  }\n\n  get parameters() {\n    return this.callEvent.$hidden.parameters;\n  }\n\n  get labels() {\n    const eventLabels = this.callEvent.$hidden.labels || [];\n    return new Set([...eventLabels, ...this.callEvent.codeObject.labels]);\n  }\n\n  get exceptions() {\n    return this.returnEvent ? this.returnEvent.$hidden.exceptions || [] : [];\n  }\n\n  get message() {\n    return this.callEvent.$hidden.message;\n  }\n\n  get httpServerRequest() {\n    return this.callEvent.http_server_request;\n  }\n\n  get httpServerResponse() {\n    return this.returnEvent ? this.returnEvent.http_server_response : undefined;\n  }\n\n  get httpClientRequest() {\n    return this.callEvent.http_client_request;\n  }\n\n  get httpClientResponse() {\n    return this.returnEvent ? this.returnEvent.http_client_response : undefined;\n  }\n\n  get definedClass() {\n    return this.defined_class ? this.defined_class.replace(/\\./g, '/') : null;\n  }\n\n  get requestPath() {\n    if (this.httpServerRequest) {\n      return this.httpServerRequest.normalized_path_info || this.httpServerRequest.path_info;\n    }\n    if (this.httpClientRequest) {\n      return this.httpClientRequest.url;\n    }\n    return null;\n  }\n\n  get requestMethod() {\n    if (this.httpServerRequest) {\n      return this.httpServerRequest.request_method;\n    }\n    if (this.httpClientRequest) {\n      return this.httpClientRequest.request_method;\n    }\n    return null;\n  }\n\n  get requestContentType() {\n    return Event.contentType(this.httpServerRequest, this.httpClientRequest);\n  }\n\n  get responseContentType() {\n    return Event.contentType(this.httpServerResponse, this.httpClientResponse);\n  }\n\n  get route() {\n    const { requestMethod, requestPath } = this;\n    if (!requestMethod || !requestPath) {\n      return null;\n    }\n\n    return `${requestMethod} ${requestPath}`;\n  }\n\n  get sqlQuery() {\n    if (!this.$hidden.sqlQuery) {\n    const { sql } = this;\n      this.$hidden.sqlQuery = sql ? sql.normalized_sql || sql.sql : null;\n    }\n    return this.$hidden.sqlQuery;\n  }\n\n  get fqid() {\n    return `event:${this.id}`;\n  }\n\n  get previousSibling() {\n    const { parent } = this;\n    if (!parent) {\n      return null;\n    }\n\n    const myIndex = parent.children.findIndex((e) => e === this);\n    console.assert(myIndex !== -1, 'attempted to locate index of an orphaned event');\n\n    if (myIndex === 0) {\n      return null;\n    }\n\n    return parent.children[myIndex - 1];\n  }\n\n  get nextSibling() {\n    const { parent } = this;\n\n    if (!parent) {\n      let event = this.next;\n\n      // Get the next root level event\n      while (event) {\n        if (event.isCall() && !event.parent) {\n          return event;\n        }\n\n        event = event.next;\n      }\n\n      return null;\n    }\n\n    const myIndex = this.parent.children.findIndex((e) => e === this);\n    console.assert(myIndex !== -1, 'attempted to locate index of an orphaned event');\n\n    if (myIndex === parent.children.length - 1) {\n      return null;\n    }\n\n    return parent.children[myIndex + 1];\n  }\n\n  set codeObject(value) {\n    if (hasProp(this.$hidden, 'codeObject')) {\n      this.$hidden.codeObject = value;\n    }\n  }\n\n  set parameters(value) {\n    if (hasProp(this.$hidden, 'parameters')) {\n      this.$hidden.parameters = value;\n    }\n  }\n\n  set labels(value) {\n    if (hasProp(this.$hidden, 'labels')) {\n      this.$hidden.labels = value;\n    }\n  }\n\n  set exceptions(value) {\n    if (hasProp(this.$hidden, 'exceptions')) {\n      this.$hidden.exceptions = value;\n    }\n  }\n\n  set message(value) {\n    if (hasProp(this.$hidden, 'message')) {\n      this.$hidden.message = value;\n    }\n  }\n\n  set linkedEvent(value) {\n    this.$hidden.linkedEvent = value;\n  }\n\n  set next(value) {\n    this.$hidden.next = value;\n  }\n\n  set previous(value) {\n    this.$hidden.previous = value;\n  }\n\n  set parent(value) {\n    this.$hidden.parent = value;\n  }\n\n  link(event) {\n    /* eslint-disable no-param-reassign */\n    if (event.linkedEvent || this.linkedEvent) {\n      return;\n    }\n\n    event.linkedEvent = this;\n    this.linkedEvent = event;\n    /* eslint-enable no-param-reassign */\n  }\n\n  isCall() {\n    return this.event === 'call';\n  }\n\n  isReturn() {\n    return this.event === 'return';\n  }\n\n  get threadId() {\n    return this.thread_id;\n  }\n\n  get parentId() {\n    return this.returnEvent ? this.returnEvent.parent_id : undefined;\n  }\n\n  get callEvent() {\n    return this.isCall() ? this : this.$hidden.linkedEvent;\n  }\n\n  get returnEvent() {\n    return this.isReturn() ? this : this.$hidden.linkedEvent;\n  }\n\n  get identityHash() {\n    if (!this.$hidden.identityHash) {\n      this.$hidden.identityHash = this.buildIdentityHash().digest();\n    }\n    return this.$hidden.identityHash;\n  }\n\n  get hash() {\n    if (!this.$hidden.hash) {\n      this.$hidden.hash = this.buildStableHash().digest();\n    }\n    return this.$hidden.hash;\n  }\n\n  get stableProperties() {\n    if (!this.$hidden.stableProperties) {\n      this.$hidden.stableProperties = this.gatherStableProperties();\n    }\n    return this.$hidden.stableProperties;\n  }\n\n  callStack() {\n    const stack = this.ancestors().reverse();\n    stack.push(this.callEvent);\n    return stack;\n  }\n\n  ancestors() {\n    const ancestorArray = [];\n    let event = this.callEvent.parent;\n\n    while (event) {\n      ancestorArray.push(event);\n      event = event.parent;\n    }\n\n    return ancestorArray;\n  }\n\n  descendants() {\n    const descendantArray = [];\n    const queue = [...this.children];\n\n    while (queue.length) {\n      const event = queue.pop();\n      event.children.forEach((child) => queue.push(child));\n      descendantArray.push(event);\n    }\n\n    return descendantArray;\n  }\n\n  traverse(fn) {\n    let event = this;\n    const boundaryEvent = this.nextSibling;\n    let { onEnter } = fn;\n    let { onExit } = fn;\n\n    if (typeof fn === 'function') {\n      onEnter = fn;\n      onExit = fn;\n    }\n\n    while (event) {\n      if (event.isCall() && onEnter) {\n        onEnter(event);\n      } else if (event.isReturn() && onExit) {\n        onExit(event);\n      }\n\n      event = event.next;\n      if (!event || event === boundaryEvent) {\n        break;\n      }\n    }\n  }\n\n  dataObjects() {\n    return [this.parameters, this.message, this.returnValue].flat().filter(Boolean);\n  }\n\n  get qualifiedMethodId() {\n    const { definedClass, isStatic, methodId } = this;\n    if (!definedClass) return undefined;\n    return `${definedClass}${isStatic ? '.' : '#'}${methodId}`;\n  }\n\n  toJSON() {\n    return transformToJSON(this.dataKeys, this);\n  }\n\n  toString() {\n    const { sqlQuery } = this;\n    if (sqlQuery) {\n      return sqlQuery;\n    }\n\n    const { route } = this;\n    if (route) {\n      return route;\n    }\n\n    return this.qualifiedMethodId;\n  }\n\n  // Returns canonical properties tied to the event's core identity: SQL, HTTP, or a\n  // specific method on a specific class. Identity properties are used to identify events that are\n  // added/removed between two AppMaps, as opposed to changes. If two events share the same\n  // identity properties, they won't be reported as an add/remove, but may be reported as a change.\n  gatherIdentityProperties() {\n    if (this.httpServerRequest) {\n      return { event_type: 'http_server_request', route: this.route };\n    }\n    if (this.httpClientRequest) {\n      return { event_type: 'http_client_request', route: this.route };\n    }\n\n    const { sqlQuery } = this;\n    if (sqlQuery) {\n      const queryOps = analyzeSQL(sqlQuery);\n      if (!queryOps)\n        return {\n          event_type: 'sql',\n          sql_normalized: normalizeSQL(sqlQuery, this.sql.database_type),\n        }; // Best we can do\n\n      return {\n        event_type: 'sql',\n        actions: [...new Set(queryOps.actions)].sort(),\n        tables: [...new Set(queryOps.tables)].sort(),\n      };\n    }\n\n    return {\n      event_type: 'function',\n      id: this.codeObject.id,\n    };\n  }\n\n  // Collects properties of an event which are not dependent on the specifics\n  // of invocation.\n  gatherStableProperties(parsedSqlCache) {\n    const { sqlQuery } = this;\n\n    // Convert null and undefined values to empty strings\n    const normalizeProperties = (/** @type{Record<string,string>} */ properties) =>\n      Object.fromEntries(\n        Object.entries(properties).map(([key, value]) => [\n          key,\n          value === undefined || value === null ? '' : value,\n        ])\n      );\n\n    // Augment a set of base properties with HTTP client/server request properties.\n    const requestProperties = (/** @type{Record<string,string>} */ baseProperties) =>\n      Object.assign(baseProperties, {\n        route: this.route,\n        status_code:\n          this.httpServerResponse?.status ||\n          this.httpServerResponse?.status_code ||\n          this.httpClientResponse?.status ||\n          this.httpServerResponse?.status_code,\n      });\n\n    let properties;\n    if (sqlQuery) {\n      let sqlNormalized;\n      const cacheKey = `${this.sql.database_type}:${sqlQuery}`;\n      if (parsedSqlCache) sqlNormalized = parsedSqlCache.get(cacheKey);\n      if (!sqlNormalized) {\n        sqlNormalized = abstractSqlAstJSON(sqlQuery, this.sql.database_type)\n        // Collapse repeated variable literals and parameter tokens (e.g. '?, ?' in an IN clause)\n        .split(/{\"type\":\"variable\"}(?:,{\"type\":\"variable\"})*/g)\n        .join(`{\"type\":\"variable\"}`);\n\n        if (parsedSqlCache) parsedSqlCache.set(cacheKey, sqlNormalized);\n      }\n\n      properties = {\n        event_type: 'sql',\n        sql_normalized: sqlNormalized,\n      };\n    } else if (this.httpServerRequest) {\n      properties = requestProperties({ event_type: 'http_server_request' });\n    } else if (this.httpClientRequest) {\n      properties = requestProperties({\n        event_type: 'http_client_request',\n      });\n    } else {\n      properties = {\n        event_type: 'function',\n        id: this.codeObject.id,\n        raises_exception: this.exceptions.length > 0,\n      };\n    }\n    return normalizeProperties(properties);\n  }\n\n  buildIdentityHash() {\n    return HashBuilder.buildHash('event-identity-v2', this.gatherIdentityProperties());\n  }\n\n  buildStableHash(parsedSqlCache) {\n    return HashBuilder.buildHash(\n      'event-stable-properties-v2',\n      this.gatherStableProperties(parsedSqlCache)\n    );\n  }\n}\n","export default class EventStack {\n  constructor(id) {\n    this.events = [];\n    this.stack = [];\n    this.id = id;\n    this.eventMap = {};\n  }\n\n  add(event) {\n    if (event.isCall()) {\n      this.stack.push(event);\n      this.eventMap[event.id] = event;\n    } else {\n      if (typeof event.parent_id === 'undefined') {\n        const lastEvent = this.stack[this.stack.length - 1];\n        if (\n          lastEvent &&\n          lastEvent.defined_class === event.defined_class &&\n          lastEvent.method_id === event.method_id &&\n          lastEvent.path === event.path &&\n          lastEvent.static === event.static\n        ) {\n          event.parent_id = lastEvent.id; // eslint-disable-line no-param-reassign\n        } else {\n          // An event has returned but the last call in the stack was not its\n          // caller. There's not really anything we can do to rectify this, so\n          // the event will be discarded.\n          return;\n        }\n      }\n\n      const call = this.eventMap[event.parent_id];\n      if (call) {\n        call.link(event);\n        this.stack.pop();\n\n        const parent = this.stack[this.stack.length - 1];\n        if (parent) {\n          parent.children.push(call);\n          call.parent = parent;\n        }\n      } else {\n        // This can happen in async contexts where the recording began in the middle\n        // of another async task. It's possible that the parent call was executed\n        // before the recording began. If this is the case, discard the return event.\n        return;\n      }\n    }\n\n    this.events.push(event);\n  }\n\n  unwound() {\n    return this.events.length > 0 && this.stack.length === 0;\n  }\n}\n","import EventStack from './eventStack';\nimport { sizeof } from '../util';\n\nfunction getStackId(collection) {\n  return Object.keys(collection.activeStacks).length + collection.finalizedStacks.length;\n}\n\n// EventSorter is responsible for untangling an event array. It sorts events by\n// thread execution order and drops leading return statements.\nexport default class EventSorter {\n  constructor() {\n    this.activeStacks = {};\n    this.finalizedStacks = [];\n  }\n\n  // Add an event to be sorted. An event must be added through this method to\n  // be collected.\n  add(event) {\n    let stack = this.activeStacks[event.thread_id];\n    if (!stack) {\n      const id = getStackId(this);\n      stack = new EventStack(id);\n      this.activeStacks[event.thread_id] = stack;\n    }\n\n    stack.add(event);\n\n    if (stack.unwound()) {\n      this.finalizedStacks.splice(stack.id, 0, stack.events);\n      delete this.activeStacks[event.thread_id];\n    }\n  }\n\n  // Calculate the serialized size of all events. This is more of an\n  // approximation than an exact number.\n  size() {\n    let size = sizeof(Object.values(this.activeStacks));\n    size += sizeof(this.finalizedStacks);\n    return size;\n  }\n\n  // Returns an array of \"chunks\". A chunk is an array consisting of many\n  // stacks. A stack is an array consisting of many events.\n  collect() {\n    // Join active and finalized stacks. We want to make sure we iterate over\n    // every event.\n    const stacks = [...this.finalizedStacks];\n    Object.values(this.activeStacks).forEach((s) => stacks.splice(s.id, 0, s.events));\n\n    return stacks.reduce((chunks, stack) => {\n      if (stack.length === 0) {\n        return chunks;\n      }\n\n      // We're the first chunk in, meaning we don't need to worry about any\n      // chunks behind us. Just push it.\n      if (chunks.length === 0) {\n        chunks.push([stack]);\n        return chunks;\n      }\n\n      // If the root event is an HTTP request, this a complete chunk. Push it.\n      if (stack[0].http_server_request) {\n        chunks.push([stack]);\n        return chunks;\n      }\n\n      if (stack[0].http_client_request) {\n        chunks.push([stack]);\n        return chunks;\n      }\n\n      // Check to see if the previous chunk began with an HTTP request. If it\n      // does, push a new chunk. Otherwise, append to the last chunk.\n      const prevChunk = chunks[chunks.length - 1];\n      const prevStack = prevChunk[prevChunk.length - 1];\n      if (prevStack[0].http_server_request || prevStack[0].http_client_request) {\n        chunks.push([stack]);\n      } else {\n        prevChunk.push(stack);\n      }\n\n      return chunks;\n    }, []);\n  }\n}\n","import EventSource from '../eventSource';\nimport AppMap from '../appMap';\nimport ClassMap from '../classMap';\nimport Event from '../event';\nimport EventSorter from './eventSorter';\nimport { sizeof } from '../util';\n\n// Performs an array of transform functions on an object. The transform function\n// is expected to return the transformed object.\nconst transform = (transforms, obj, ...args) => transforms.reduce((x, fn) => fn(x, ...args), obj);\n\n// AppMapBuilder is responsible for transforming appmap data before returning\n// an AppMap model.\nclass AppMapBuilder extends EventSource {\n  constructor(data) {\n    super();\n\n    this.sorter = new EventSorter();\n    this.transforms = {\n      event: [],\n      stack: [],\n      chunk: [],\n    };\n    this.allEvents = [];\n\n    if (data) {\n      this.source(data);\n    }\n  }\n\n  // Provide a source of data - i.e. an appmap JSON object\n  source(data) {\n    const dataType = typeof data;\n    if (dataType === 'object') {\n      this.data = { ...data };\n    } else if (dataType === 'string') {\n      this.data = JSON.parse(data);\n    } else {\n      throw new Error(`got invalid type ${dataType}, expected object or string`);\n    }\n\n    this.exclusions = new Set();\n\n    (this.data.events || []).forEach((e) => {\n      if (this.data.eventUpdates && this.data.eventUpdates[e.id]) {\n        // eslint-disable-next-line no-param-reassign\n        e = this.data.eventUpdates[e.id];\n      }\n      const event = new Event(e);\n      this.allEvents.push(event);\n      this.sorter.add(event);\n    });\n\n    delete this.data.events;\n    delete this.data.eventUpdates;\n\n    return this;\n  }\n\n  // register an optional event transform\n  event(fn) {\n    console.assert(typeof fn === 'function');\n    this.transforms.event.push(fn);\n    return this;\n  }\n\n  // register a optional stack transform\n  stack(fn) {\n    console.assert(typeof fn === 'function');\n    this.transforms.stack.push(fn);\n    return this;\n  }\n\n  // register a optional chunk transform\n  chunk(fn) {\n    console.assert(typeof fn === 'function');\n    this.transforms.chunk.push(fn);\n    return this;\n  }\n\n  // normalize the appmap data before returning an Appmap model\n  normalize() {\n    // Remove credentials from git repository url\n    if (/^https?/.test(this.data.metadata?.git?.repository)) {\n      const url = new URL(this.data.metadata.git.repository);\n      url.username = '';\n      url.password = '';\n      this.data.metadata.git.repository = url.toString();\n    }\n\n    // Re-index events\n    let eventId = 1;\n    this.event((event) => {\n      /* eslint-disable no-param-reassign */\n      event.id = eventId;\n      eventId += 1;\n\n      if (event.isCall() && event.returnEvent) {\n        event.returnEvent.parent_id = event.id;\n      }\n\n      // Normalize path info\n      const { httpServerRequest } = event;\n      if (httpServerRequest && httpServerRequest.normalized_path_info) {\n        httpServerRequest.normalized_path_info = httpServerRequest.normalized_path_info.toString();\n      }\n      if (httpServerRequest && httpServerRequest.path_info) {\n        httpServerRequest.path_info = httpServerRequest.path_info.toString();\n      }\n\n      return event;\n      /* eslint-enable no-param-reassign */\n    });\n\n    // Balance the stack by adding dummy returns to calls which never return\n    return this.stack((events) => {\n      events\n        .filter((e) => e.isCall() && !e.returnEvent)\n        .reverse()\n        .map((e) => {\n          const returnEvent = new Event({\n            event: 'return',\n            thread_id: e.thread_id,\n            parent_id: e.id,\n          });\n          returnEvent.link(e);\n          return returnEvent;\n        })\n        .forEach((e) => events.push(e));\n\n      return events;\n    });\n  }\n\n  // Cut down the size of the event array before creating the Appmap model\n  prune(sizeBytes) {\n    console.assert(typeof sizeBytes === 'number');\n\n    let classMap;\n    let pruneRatio = 0;\n\n    return this.on('preprocess', (d) => {\n      const size = this.sorter.size();\n      classMap = new ClassMap(d.data.classMap);\n      pruneRatio = Math.min(sizeBytes / size, 1);\n\n      // We're storing size/count state in the global class map. This isn't\n      // great but it works for now.\n      classMap.visit((obj) => {\n        /* eslint-disable no-param-reassign */\n        obj.size = 0;\n        obj.count = 0;\n        /* eslint-enable no-param-reassign */\n      });\n\n      this.allEvents.forEach((e) => {\n        if (e.event !== 'call' || e.sql_query || e.http_server_request || e.http_client_request) {\n          return;\n        }\n\n        const obj = classMap.codeObjectFromEvent(e);\n        if (obj) {\n          const objSize = sizeof(e);\n          obj.size = obj.size + objSize || objSize;\n          obj.count = obj.count + 1 || 1;\n        }\n      });\n\n      // Build an array of code objects sorted by size. The largest object\n      // will always be index 0.\n      let totalBytes = 0;\n      const eventAggregates = classMap.codeObjects\n        .filter((obj) => obj.size)\n        .sort((a, b) => a.size - b.size)\n        .map((obj) => {\n          totalBytes += obj.size;\n          return {\n            fqid: obj.fqid,\n            count: obj.count,\n            size: obj.size,\n            totalBytes,\n          };\n        })\n        .reverse();\n\n      // Build a list of unique exclusions, starting with the largest event\n      // type. Iterate until the estimated event array size is under our\n      // threshold.\n      for (let i = 0; i < eventAggregates.length; i += 1) {\n        const eventInfo = eventAggregates[i];\n        if (eventInfo.totalBytes <= totalBytes * pruneRatio) {\n          break;\n        }\n        this.exclusions.add(eventInfo.fqid);\n      }\n      this.updatePruneFilter();\n    }).chunk((stacks) => this.excludeEvents(stacks, classMap, this.exclusions));\n  }\n\n  updatePruneFilter() {\n    const currentHideName = Array.from(this.exclusions.values());\n\n    if (!this.data.pruneFilter) {\n      this.data.pruneFilter = { hideName: currentHideName };\n    } else if (!this.data.pruneFilter.hideName) {\n      this.data.pruneFilter.hideName = currentHideName;\n    } else {\n      currentHideName.forEach((pruned) => this.data.pruneFilter.hideName.push(pruned));\n    }\n  }\n\n  // expects exclusions to be a Set\n  excludeEvents(stacks, classMap, exclusions) {\n    return stacks.map((events) =>\n      events.filter((e) => {\n        const { callEvent } = e;\n\n        // If there's no call event, there's no need to retain this event\n        if (!callEvent) return false;\n\n        if (callEvent.http_server_request || callEvent.http_client_request || callEvent.sql_query)\n          return true;\n\n        const codeObj = classMap.codeObjectFromEvent(callEvent);\n\n        // keep events where the code object cannot be found\n        if (!codeObj || !codeObj.fqid) return true;\n\n        return !exclusions.has(codeObj.fqid);\n      })\n    );\n  }\n\n  removeNoise() {\n    if (!this.data.events) {\n      return this;\n    }\n\n    const hasHttp = Boolean(\n      this.data.events.find((e) => e.httpServerRequest || e.httpClientRequest)\n    );\n    if (!hasHttp) {\n      // the entire file is noise - do nothing\n      return this;\n    }\n\n    return this.chunk((stacks) =>\n      stacks.filter((stack) => {\n        if (!stack.length) {\n          return false;\n        }\n\n        return Boolean(stack[0].httpServerRequest) || Boolean(stack[0].httpClientRequest);\n      })\n    );\n  }\n\n  collectEvents() {\n    return this.sorter\n      .collect()\n      .map((chunk) => {\n        const transformedChunk = transform(this.transforms.chunk, chunk);\n        return transformedChunk.map((stack) => {\n          const transformedStack = transform(this.transforms.stack, stack);\n          return transformedStack.map((event) => transform(this.transforms.event, event));\n        });\n      })\n      .flat(2);\n  }\n\n  // Returns an Appmap model after running transforms such as normalize, prune,\n  // etc.\n  build() {\n    this.emit('preprocess', { data: this.data });\n    const events = this.collectEvents();\n    return new AppMap({ ...this.data, events });\n  }\n}\n\nexport default function buildAppMap(data = null) {\n  return new AppMapBuilder(data);\n}\n","/* eslint-disable no-restricted-syntax */\nexport default class EventNavigator {\n  constructor(event) {\n    this.event = event;\n  }\n\n  get callEvent() {\n    return this.event.callEvent;\n  }\n\n  get labels() {\n    const { codeObject } = this.event;\n    if (codeObject && codeObject.labels) {\n      return codeObject.labels;\n    }\n    return null;\n  }\n\n  *self() {\n    yield this;\n  }\n\n  *ancestors() {\n    let event = this.callEvent.parent;\n\n    while (event) {\n      yield new EventNavigator(event);\n      event = event.parent;\n    }\n  }\n\n  /**\n   * Generates all events which precede this event in the scenario.\n   */\n  *preceding() {\n    for (const node of [this, ...this.ancestors()]) {\n      if (node !== this) yield node;\n      for (const sibling of node.precedingSiblings()) {\n        for (const descendant of [...sibling.descendants()].reverse()) yield descendant;\n        yield sibling;\n      }\n    }\n  }\n\n  *following() {\n    for (const descendant of this.descendants()) yield descendant;\n    for (const node of [this, ...this.ancestors()]) {\n      for (const sibling of node.followingSiblings()) {\n        yield sibling;\n        for (const descendant of sibling.descendants()) yield descendant;\n      }\n    }\n  }\n\n  *precedingSiblings() {\n    const { parent } = this.callEvent;\n    if (!parent) {\n      return;\n    }\n\n    const index = parent.children.indexOf(this.callEvent);\n    for (let i = index - 1; i >= 0; i -= 1) {\n      yield new EventNavigator(parent.children[i]);\n    }\n  }\n\n  *followingSiblings() {\n    const { parent } = this.callEvent;\n    if (!parent) {\n      return;\n    }\n\n    const index = parent.children.indexOf(this.callEvent);\n    for (let i = index + 1; i < parent.children.length; i += 1) {\n      yield new EventNavigator(parent.children[i]);\n    }\n  }\n\n  *descendants(filterFn = () => true) {\n    const queue = [...this.event.children];\n    while (queue.length) {\n      const event = queue.shift();\n      if (filterFn(event)) {\n        yield new EventNavigator(event);\n        if (event.children) queue.unshift(...event.children);\n      }\n    }\n  }\n\n  hasLabel(label) {\n    return this.hasLabels([label]);\n  }\n\n  hasLabels(...searchLabels) {\n    if (!this.labels) {\n      return false;\n    }\n\n    if (!searchLabels || !searchLabels.length) {\n      return this.labels.size > 0;\n    }\n\n    return searchLabels.filter((l) => this.labels.has(l)).length === searchLabels.length;\n  }\n}\n","import { getLabel } from './util';\n\nfunction mapFunctionLocations(memo, obj) {\n  /* eslint-disable no-param-reassign */\n  if (obj.type === 'function') {\n    memo[obj.location] = obj;\n  }\n\n  if (obj.children) {\n    obj.children.reduce(mapFunctionLocations, memo);\n  }\n\n  return memo;\n  /* eslint-enable no-param-reassign */\n}\n\nexport default class EventInfo {\n  constructor(classMap) {\n    this.functionObjects = classMap.reduce(mapFunctionLocations, {});\n  }\n\n  getName(event) {\n    const label = getLabel(event);\n    if (label) {\n      return label;\n    }\n\n    const codeObj = this.getCodeObject(event);\n    if (codeObj) {\n      return codeObj.display_name;\n    }\n\n    // Fallback algorithm\n    const separator = event.static ? '.' : '#';\n    return [event.defined_class, separator, event.method_id].join('');\n  }\n\n  getLabels(event) {\n    const labels = [];\n\n    if (event.labels) {\n      labels.push(...event.labels);\n    }\n\n    const codeObj = this.getCodeObject(event);\n    if (codeObj && codeObj.labels.length) {\n      labels.push(...codeObj.labels);\n    }\n\n    return labels;\n  }\n\n  getCodeObject(event) {\n    return this.functionObjects[`${event.path}:${event.lineno}`];\n  }\n}\n","import buildAppMap from './appMapBuilder';\nimport AppMap from './appMap';\nimport CodeObject from './codeObject';\nimport { isLocalPath } from './util';\n\nexport const DEFAULT_CONTEXT_DEPTH = 1;\n\nclass DeclutterProperty {\n  on = true;\n  default = true;\n\n  constructor(on = true, defaultValue = true) {\n    this.on = on;\n    this.default = defaultValue;\n  }\n}\n\nclass DeclutterTimeProperty extends DeclutterProperty {\n  DEFAULT_TIME = 100;\n\n  time = this.DEFAULT_TIME;\n\n  constructor(on = true, defaultValue = true, time = DeclutterTimeProperty.DEFAULT_TIME) {\n    super(on, defaultValue);\n\n    this.time = time;\n  }\n}\n\nclass DeclutterNamesProperty extends DeclutterProperty {\n  names = [];\n\n  constructor(on = true, defaultValue = true, names = []) {\n    super(on, defaultValue);\n\n    this.names = names;\n  }\n}\n\nclass DeclutterContextNamesProperty extends DeclutterNamesProperty {\n  depth = DEFAULT_CONTEXT_DEPTH;\n\n  constructor(on = true, defaultValue = true, names = [], depth = undefined) {\n    super(on, defaultValue, names);\n\n    if (depth !== undefined) this.depth = depth;\n  }\n}\n\n// Directories inside the project tree that may contain bundled dependencies.\nconst DependencyFolders = ['vendor', 'node_modules'];\n\nclass DeclutterExternalPathsProperty extends DeclutterProperty {\n  dependencyFolders = DependencyFolders;\n\n  constructor(on = false, defaultValue = false, dependencyFolders = DependencyFolders) {\n    super(on, defaultValue);\n\n    this.dependencyFolders = dependencyFolders || DependencyFolders;\n  }\n}\n\nconst ROOT_EVENT_LABELS = ['cli.command', 'job.perform', 'message.handle'];\n\nclass Declutter {\n  limitRootEvents = new DeclutterProperty();\n  hideMediaRequests = new DeclutterProperty();\n  hideExternalPaths = new DeclutterExternalPathsProperty();\n  hideUnlabeled = new DeclutterProperty(false, false);\n  hideElapsedTimeUnder = new DeclutterTimeProperty(false, false, 1);\n  hideName = new DeclutterNamesProperty(false, false, []);\n  hideTree = new DeclutterNamesProperty(false, false, []);\n  context = new DeclutterContextNamesProperty(false, false, []);\n}\n\nconst FilterRegExps = {};\nfunction filterRegExp(filterExpression, regexpConstructorArgs) {\n  if (!FilterRegExps[filterExpression])\n    FilterRegExps[filterExpression] = new RegExp(...regexpConstructorArgs());\n\n  return FilterRegExps[filterExpression];\n}\n\n// events: Array of events to process.\n// filterFn: A test function to apply to each event. If the function returns true, the event is\n//   included in the result. If an ancestor of a descendant event has matched the filterFn, and distance to the\n//   ancestor is within the maxDepth, then the descendant is included as well.\n// maxDepth: The maximum depth of a descendant event to include. If undefined, all descendants are included.\n// Returns: A set of events that matched the filterFn.\nfunction markSubtrees(events, filterFn, maxDepth) {\n  const matchingEvents = new Set();\n\n  // Collect all 'call' events that match explicitly.\n  events.filter((e) => e.isCall() && filterFn(e)).forEach((e) => matchingEvents.add(e));\n\n  // Match all descendants of matching events, down to maxDepth.\n  const matchDescendant = (e, depth) => {\n    // Already marked before by some other traversal.\n    if (matchingEvents.has(e)) return;\n\n    // Below the maxDepth.\n    if (maxDepth !== undefined && depth > maxDepth) return;\n\n    matchingEvents.add(e);\n    if (e.children) e.children.forEach((child) => matchDescendant(child, depth + 1));\n  };\n\n  [...matchingEvents]\n    .filter((e) => e.children)\n    .forEach((e) => e.children.forEach((child) => matchDescendant(child, 1)));\n\n  [...matchingEvents].forEach((e) => matchingEvents.add(e.returnEvent));\n\n  return matchingEvents;\n}\n\n// Collect all code objects that match a filter expressions.\n// Mark all events that are in a subtree whose root is one of the matched code objects.\n// Collect all marked events.\n// This filter should run in O(n), assuming set insertion and lookup is constant time.\nfunction includeSubtrees(events, filterFn, applyIfEmpty) {\n  const includedEvents = markSubtrees(events, filterFn);\n\n  if (applyIfEmpty || includedEvents.size) return events.filter((e) => includedEvents.has(e));\n  else return events;\n}\n\n// Collect all code objects that match a filter expressions.\n// Mark all events that are in a subtree whose root is one of the matched code objects.\n// Collect all unmarked events.\n// This filter should run in O(n), assuming set insertion and lookup is constant time.\nfunction excludeSubtrees(events, filterFn) {\n  const excludedEvents = markSubtrees(events, filterFn);\n\n  return events.filter((e) => !excludedEvents.has(e));\n}\n\nexport default class AppMapFilter {\n  rootObjects = [];\n  declutter = new Declutter();\n\n  /**\n   *\n   * @param {AppMap} appMap\n   * @param {any[]} findings\n   * @returns {AppMap}\n   */\n  filter(appMap, findings) {\n    const { classMap } = appMap;\n    let { events } = appMap;\n\n    // Collect all code objects that match a filter expression. When a code object matches an\n    // expression, the entire subtree rooted at that code object is included as well.\n    function matchCodeObjects(expressions, matchSelf, matchTrailingWildcard) {\n      return classMap.codeObjects.reduce((memo, codeObject) => {\n        if (\n          expressions.some((expr) =>\n            AppMapFilter.codeObjectIsMatched(codeObject, expr, matchTrailingWildcard)\n          )\n        ) {\n          codeObject.visit((co) => {\n            if (co !== codeObject || matchSelf) memo.add(co);\n          });\n        }\n\n        return memo;\n      }, new Set());\n    }\n\n    // Include only subtrees of \"command\"-type events, unless there are no commands.\n    if (this.declutter.limitRootEvents.on) {\n      // Return true if the event is a \"command\". Types of commands recognized by this test include:\n      // - HTTP server request - the event has http_server_request data\n      // - cli.command - command of a CLI application\n      // - job.perform - a background job\n      // - message.handle - a handler for a message queue\n      //\n      // @param {Event} e\n      const isCommand = (e) => {\n        if (e.httpServerRequest) return true;\n\n        const { labels } = e.codeObject;\n\n        return ROOT_EVENT_LABELS.find((label) => labels.has(label));\n      };\n\n      events = includeSubtrees(events, isCommand, false);\n    }\n\n    // Include only subtrees of a specified root object. This could also be stored and managed\n    // as a declutter filter, but it isn't, for some reason. It works the same way.\n    if (this.rootObjects.length) {\n      const includeCodeObjects = matchCodeObjects(this.rootObjects, true);\n      const filterFn = (e) => includeCodeObjects.has(e.codeObject);\n\n      events = includeSubtrees(events, filterFn, true);\n    }\n\n    if (this.declutter.context.on && this.declutter.context.names.length) {\n      const includeCodeObjects = matchCodeObjects(this.declutter.context.names, true, false);\n      const filterFn = (e) => includeCodeObjects.has(e.codeObject);\n\n      const subtreeEvents = markSubtrees(events, filterFn, this.declutter.context.depth);\n      const ancestorEvents = new Set();\n      const includeAncestors = (e, distance = 1) => {\n        if (!e) return;\n\n        if (ancestorEvents.has(e)) return;\n\n        if (distance <= this.declutter.context.depth || !e.parent) {\n          ancestorEvents.add(e);\n          ancestorEvents.add(e.returnEvent);\n        }\n\n        if (e.parent) includeAncestors(e.parent, distance + 1);\n      };\n      events.filter((e) => filterFn(e)).forEach((e) => includeAncestors(e.parent));\n      events = events.filter((e) => subtreeEvents.has(e) || ancestorEvents.has(e));\n    }\n\n    // Hide descendent events from named, pattern-matched or labeled code objects. The matching\n    // event itself is not hidden. To accomplish that, add the same filter to `hideName`.\n    if (this.declutter.hideTree.on && this.declutter.hideTree.names.length) {\n      const excludeCodeObjects = matchCodeObjects(this.declutter.hideTree.names, false);\n      events = excludeSubtrees(events, (e) => excludeCodeObjects.has(e.codeObject));\n    }\n\n    // Hide HTTP server requests that fetch a known media type.\n    if (this.declutter.hideMediaRequests.on) {\n      events = AppMapFilter.filterMediaRequests(events);\n    }\n\n    // Hide any unlabeled code object. This is rarely useful.\n    if (this.declutter.hideUnlabeled.on) {\n      events = events.filter((e) => e.labels.size > 0 || e.codeObject.type !== 'function');\n    }\n\n    // Hide code that appears to be sourced from outside the local source tree.\n    // This isn't super reliable, because the location path may be inside the project tree\n    // even for external code; and the location may be outside the project tree even for code\n    // that the user considers to be part of the project.\n    if (this.declutter.hideExternalPaths.on) {\n      events = events.filter(\n        (e) =>\n          e.codeObject.type !== 'function' ||\n          isLocalPath(e.codeObject.location, this.declutter.hideExternalPaths.dependencyFolders)\n            .isLocal\n      );\n    }\n\n    // Hide code whose elapsed time is less than a specified threshold.\n    // This is useful for navigating down a call tree looking for expensive code.\n    if (this.declutter.hideElapsedTimeUnder.on && this.declutter.hideElapsedTimeUnder.time > 0) {\n      events = events.filter(\n        (e) => e.elapsedTime && e.elapsedTime >= this.declutter.hideElapsedTimeUnder.time / 1000\n      );\n    }\n\n    // Hide events from named, pattern-matched or labeled code objects. Hiding does not apply to\n    // sub-events of matching events.\n    if (this.declutter.hideName.on && this.declutter.hideName.names.length) {\n      const excludeCodeObjects = matchCodeObjects(this.declutter.hideName.names, true);\n      events = events.filter((e) => !excludeCodeObjects.has(e.codeObject));\n    }\n\n    const eventIds = new Set(events.filter((e) => e.isCall()).map((e) => e.id));\n\n    if (findings && findings.length > 0) {\n      findings.forEach((finding) => {\n        if (\n          finding.appMapUri &&\n          finding.appMapUri.fragment &&\n          typeof finding.appMapUri.fragment === 'string'\n        ) {\n          finding.appMapUri.fragment = JSON.parse(finding.appMapUri.fragment);\n        }\n      });\n\n      events = AppMapFilter.attachFindingsToEvents(events, findings);\n    }\n\n    return buildAppMap({\n      events: events.filter((e) => eventIds.has(e.id) || (e.parentId && eventIds.has(e.parentId))),\n      classMap: classMap.roots.map((c) => ({ ...c.data })),\n      metadata: appMap.metadata,\n    }).build();\n  }\n\n  /**\n   *\n   * @param {Event[]} events\n   * @returns Event[]\n   */\n  static filterMediaRequests(events) {\n    const excludedEvents = [];\n    const mediaRegex = [\n      'application/javascript',\n      'application/ecmascript',\n      'audio/.+',\n      'font/.+',\n      'image/.+',\n      'text/javascript',\n      'text/ecmascript',\n      'text/css',\n      'video/.+',\n    ].map((t) => new RegExp(t, 'i'));\n    const mediaFileExtensions = new Set([\n      'aac',\n      'avi',\n      'bmp',\n      'css',\n      'flv',\n      'gif',\n      'htm',\n      'html',\n      'ico',\n      'jpeg',\n      'jpg',\n      'js',\n      'json',\n      'jsonld',\n      'mid',\n      'midi',\n      'mjs',\n      'mov',\n      'mp3',\n      'mp4',\n      'mpeg',\n      'oga',\n      'ogg',\n      'ogv',\n      'ogx',\n      'opus',\n      'otf',\n      'png',\n      'svg',\n      'tif',\n      'tiff',\n      'ts',\n      'ttf',\n      'wav',\n      'weba',\n      'webm',\n      'webp',\n      'woff',\n      'woff2',\n      'xhtml',\n      '3gp',\n      '3g2',\n    ]);\n\n    events.forEach((e) => {\n      const { httpServerResponse } = e;\n      if (e.requestMethod === 'GET' && e.requestPath) {\n        const pathExt = e.requestPath.match(/.*\\.([\\S]*)$/);\n        if (pathExt && mediaFileExtensions.has(pathExt[1])) {\n          excludedEvents.push(e.id);\n        }\n      } else if (httpServerResponse) {\n        let mimeType;\n        const { headers } = httpServerResponse;\n\n        if (headers) {\n          const contentTypeKey = Object.keys(headers).filter(\n            (k) => k.toLowerCase() === 'content-type'\n          )[0];\n\n          mimeType = headers[contentTypeKey];\n        } else {\n          mimeType = httpServerResponse.mime_type; // 'mime_type' is no longer supported in the AppMap data standard, but we should keep this code for backward compatibility\n        }\n\n        if (mimeType && e.parentId && mediaRegex.some((regex) => regex.test(mimeType))) {\n          excludedEvents.push(e.parentId);\n        }\n      }\n    });\n\n    // TODO It would be even better to exclude the whole subtree, in case the media request is handled by user code.\n    return events.filter((e) => !excludedEvents.includes(e.id));\n  }\n\n  /**\n   *\n   * @param {CodeObject} object\n   * @param {string} query\n   * @param {boolean} matchTrailingWildcard this is a legacy option that's here for compatibility.\n   * When the \"query\" can be a complex string like a SQL query, a trailing \"*\" character is not a reliable\n   * indicate that the user wants to match a prefix. This is because the query itself may contain a \"*\".\n   * So for cases like this, matchTrailingWildcard can be disabled.\n   * @returns boolean\n   */\n  static codeObjectIsMatched(object, query, matchTrailingWildcard) {\n    if (query === object.fqid) {\n      return true;\n    } else if (query.startsWith('label:')) {\n      const pattern = filterRegExp(query, () => [\n        `^${query.replace('label:', '').replace('*', '.*')}$`,\n        'ig',\n      ]);\n      return Array.from(object.labels).some((label) => pattern.test(label));\n    }\n    if (query.length > 2 && query.charAt(0) === '/' && query.charAt(query.length - 1) === '/') {\n      const pattern = filterRegExp(query, () => [query.substring(1, query.length - 1), 'ig']);\n      if (pattern.test(object.fqid)) {\n        return true;\n      }\n    } else if (matchTrailingWildcard && query.endsWith('*')) {\n      const pattern = filterRegExp(query, () => [`^${query.slice(0, query.length - 1)}.*`, 'ig']);\n      if (pattern.test(object.fqid)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // Regarding untyped 'findings' - Finding is declared in @appland/scanner, but I'm not going to\n  // add a dependency on that package just yet. All the code in this file was originally located\n  // in VsCodeExtension, and as a first step I'm just refactoring it out.\n  static attachFindingsToEvents(events, findings) {\n    const eventsById = events.reduce((map, e) => {\n      map[e.id] = e.callEvent;\n      return map;\n    }, {});\n\n    findings.forEach((finding) => {\n      const traceFilter =\n        finding.appMapUri && finding.appMapUri.fragment && finding.appMapUri.fragment.traceFilter;\n\n      if (traceFilter) {\n        const ids = traceFilter.split(' ').map((idStr) => Number(idStr.split(':')[1]));\n\n        ids.forEach((id) => {\n          const event = eventsById[id];\n\n          if (event && !AppMapFilter.eventAlreadyHasFinding(event, finding)) {\n            if (event.findings) {\n              event.findings.push(finding);\n            } else {\n              event.findings = [finding];\n            }\n          }\n        });\n      }\n    });\n\n    return events;\n  }\n\n  static eventAlreadyHasFinding(event, finding) {\n    return (\n      event.findings &&\n      !!event.findings.find(\n        (attachedFinding) => attachedFinding.finding.hash_v2 === finding.finding.hash_v2\n      )\n    );\n  }\n}\n","import AppMapFilter, { DEFAULT_CONTEXT_DEPTH } from './appMapFilter';\nimport { base64UrlDecode } from './util';\n\nfunction mergeLists(a, b) {\n  if (a === false && b === false) return false;\n\n  const result = [...new Set([...(a || []), ...(b || [])])].sort();\n  return result.length > 0 ? result : false;\n}\n\nfunction lowestNumber(...sequence) {\n  sequence = sequence.filter((t) => t !== undefined && t !== null && t !== false);\n\n  if (sequence.length === 0) return false;\n\n  return Math.min(\n    ...sequence\n      .map((t) => (typeof t === 'number' ? t : parseInt(t.toString(), 10)))\n      .filter((t) => !isNaN(t))\n  );\n}\n\nfunction coalesce(...sequence) {\n  return sequence.find((t) => t !== undefined && t !== null && t !== false);\n}\n\nexport function mergeFilterState(first, second) {\n  return {\n    rootObjects: mergeLists(first.rootObjects, second.rootObjects),\n    limitRootEvents: coalesce(first.limitRootEvents, second.limitRootEvents),\n    hideMediaRequests: coalesce(first.hideMediaRequests, second.hideMediaRequests),\n    hideUnlabeled: coalesce(first.hideUnlabeled, second.hideUnlabeled),\n    hideExternal: coalesce(first.hideExternal, second.hideExternal),\n    dependencyFolders: mergeLists(first.dependencyFolders, second.dependencyFolders),\n    hideElapsedTimeUnder: lowestNumber(first.hideElapsedTimeUnder, second.hideElapsedTimeUnder),\n    hideName: mergeLists(first.hideName, second.hideName),\n  };\n}\n\n// Serialize the AppMapFilter to an object.\nexport function serializeFilter(filter) {\n  if (!filter) return {};\n\n  let declutter = filter;\n  const rootObjects = filter.rootObjects;\n  if ('declutter' in filter) declutter = filter.declutter;\n\n  return Object.entries({\n    rootObjects: rootObjects,\n    limitRootEvents: declutter.limitRootEvents.on,\n    hideMediaRequests: declutter.hideMediaRequests.on,\n    hideUnlabeled: declutter.hideUnlabeled.on,\n    hideExternalPaths: declutter.hideExternalPaths.on\n      ? declutter.hideExternalPaths.dependencyFolders\n      : false,\n    hideElapsedTimeUnder: declutter.hideElapsedTimeUnder.on\n      ? declutter.hideElapsedTimeUnder.time\n      : false,\n    context: declutter.context.on ? declutter.context.names : false,\n    contextDepth:\n      declutter.context.on && declutter.context.depth !== DEFAULT_CONTEXT_DEPTH\n        ? declutter.context.depth\n        : false,\n    hideName: declutter.hideName.on ? declutter.hideName.names : false,\n  }).reduce((memo, [k, v]) => {\n    const filter = declutter[k];\n    if (Array.isArray(v) && v.length !== 0) {\n      memo[k] = v;\n    } else if (typeof v === 'number') {\n      memo[k] = v;\n    } else if (filter && filter.default !== v) {\n      memo[k] = v;\n    }\n    return memo;\n  }, {});\n}\n\n// If stringInput is a base64 URL encoded string, decode it. Parse as JSON into a FilterState object.\nexport function filterStringToFilterState(stringInput) {\n  if (!stringInput) return;\n\n  let json;\n  const isStringifiedJson = stringInput.trimStart().startsWith('{');\n  if (isStringifiedJson) {\n    // The old style of deserialization expected a raw stringified JSON object.\n    // To avoid introducing a breaking change, we'll support both for now.\n    json = stringInput;\n  } else {\n    json = base64UrlDecode(stringInput);\n  }\n\n  return JSON.parse(json);\n}\n\n// Convert a filter string to AppMapFilter. The filter string may optionally be\n// base64 URL encoded.\nexport function deserializeFilter(filterState) {\n  if (typeof filterState === 'string') filterState = filterStringToFilterState(filterState);\n\n  const filter = new AppMapFilter();\n  if (!filterState) return filter;\n\n  for (const property in filterState) {\n    if (\n      Object.prototype.hasOwnProperty.call(filterState, property) &&\n      filterState[property] === undefined\n    )\n      delete filterState[property];\n  }\n\n  if ('rootObjects' in filterState && filterState.rootObjects !== false) {\n    filter.rootObjects = filterState.rootObjects;\n  }\n  if ('limitRootEvents' in filterState) {\n    filter.declutter.limitRootEvents.on = filterState.limitRootEvents;\n  }\n  if ('hideMediaRequests' in filterState) {\n    filter.declutter.hideMediaRequests.on = filterState.hideMediaRequests;\n  }\n  if ('hideUnlabeled' in filterState) {\n    filter.declutter.hideUnlabeled.on = filterState.hideUnlabeled;\n  }\n  ['hideExternal', 'hideExternalPaths'].forEach((key) => {\n    if (key in filterState) {\n      const value = filterState[key];\n\n      if (value && Array.isArray(value)) {\n        filter.declutter.hideExternalPaths.on = true;\n        filter.declutter.hideExternalPaths.dependencyFolders = filterState[key];\n      } else {\n        filter.declutter.hideExternalPaths.on = filterState[key];\n      }\n    }\n  });\n  if ('dependencyFolders' in filterState && filterState.dependencyFolders !== false) {\n    filter.declutter.hideExternalPaths.dependencyFolders = filterState.dependencyFolders;\n  }\n  if ('hideElapsedTimeUnder' in filterState && filterState.hideElapsedTimeUnder !== false) {\n    filter.declutter.hideElapsedTimeUnder.on = true;\n    filter.declutter.hideElapsedTimeUnder.time = filterState.hideElapsedTimeUnder;\n  }\n  ['hideName', 'hideNames'].forEach((key) => {\n    if (key in filterState && filterState[key] !== false) {\n      filter.declutter.hideName.on = true;\n      filter.declutter.hideName.names = filterState[key];\n    }\n  });\n  if ('context' in filterState && filterState.context !== false) {\n    filter.declutter.context.on = true;\n    filter.declutter.context.names = filterState.context;\n    if ('contextDepth' in filterState && filterState.contextDepth !== false) {\n      filter.declutter.context.depth = filterState.contextDepth;\n    }\n  }\n  if ('hideTree' in filterState && filterState.hideTree !== false) {\n    filter.declutter.hideTree.on = true;\n    filter.declutter.hideTree.names = filterState.hideTree;\n  }\n\n  return filter;\n}\n"],"mappings":"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","names":["CodeObjectType","isExcludedParentType","type","CodeObjectType","codeObjectId","codeObject","tokens","parent","separator","sha256","COMMENTS_REGEXP","COMPONENTS_REGEXP_MAP","CLEANUP_REGEXP","DIALECT_COMPONENTS","PLACEHOLDER","generateRegexp","dialect","union","component","MYSQL_COMPONENTS_REGEXP","POSTGRES_COMPONENTS_REGEXP","SQLITE_COMPONENTS_REGEXP","ORACLE_COMPONENTS_REGEXP","CASSANDRA_COMPONENTS_REGEXP","FALLBACK_REGEXP","detectUnmatchedPairs","obfuscated","adapter","normalize","sql","regexp","sqliteParser","ParseError","message","sql","warnedAboutSqlErrorHandler","sqlErrorHandler","setSQLErrorHandler","handler","sqlErrorHandler","reportParseError","parseError","warnedAboutSqlErrorHandler","parse","sql","parseSQL","sqliteParser","e","reportParseError","ParseError","analyze","sql","ast","parse","actions","columns","tables","joins","parseQuery","statement","key","propertyName","parser","parsers","parseStatement","prs","reservedWords","property","parseList","listElements","listElement","subExpression","nop","parseIdentifierExpression","recordAction","action","unique","list","abstractSqlAstJSON","query","databaseType","_","value","normalize","Buffer","isLogPathsEnabled","e","LogPaths","hasProp","obj","prop","isFalsey","valueObj","isCommand","event","capitalizeString","str","getHttpLabel","requestMethod","pathInfo","label","url","sqlLabels","getSqlLabelFromString","sqlString","sqlChars","depth","topLevelSql","arr","c","queryType","t","getSqlLabel","getLabel","hashify","clone","key","val","REPOSITORY_RESOLVERS","d","match","hash","getRepositoryUrl","path","commit","lineNumber","resolvers","i","repositoryUrl","UPPER","LOWER","getCase","char","getCasePattern","splitCamelCase","strLen","casePattern","firstCase","secondCase","ret","matched","charCase","token","fullyQualifiedFunctionName","tokenizeIdentifier","id","addHiddenProperty","property","opts","buildLabels","classMap","events","result","addLabel","type","target","codeObject","sizeof","identityHashEvent","sqlQuery","queryOps","analyze","content","sha256","resolveDifferences","arr1","arr2","arr1Index","arr2Index","a","b","hashA","hashB","instancesA","instancesB","getRootEvents","eventArray","isEmpty","value","transformToJSON","dataKeys","memo","base64UrlDecode","encodedText","base64UrlEncode","text","SeenPaths","logPath","status","reason","isLocalPath","location","disallowedFolders","lineno","folder","CodeObject","data","parent","item","CodeObjectType","addHiddenProperty","val","obj","fn","stack","child","ancestor","type","queue","leafArray","childrenOfType","tokens","codeObjectId","paths","transformToJSON","event","elements","serviceName","getSqlLabelFromString","children","currentObject","parents","indexCodeObject","co","codeObjects","codeObjectsById","ClassMap","classMap","buildCodeObject","data","parent","CodeObject","child","location","root","fn","query","queryLower","id","event","codeObject","path","lineno","e","o","type","obj","CodeObjectType","events","validCodeObjects","findOrCreateCodeObject","codeObjectArray","newCodeObject","dataElements","dataElement","filterCodeObjects","objectsList","allObjects","CallNode","input","output","caller","labels","addHiddenProperty","value","newNode","child","newChild","node","children","idx","c","childIndex","fn","stack","conditionFn","root","childEvents","i","match","nodes","parent","ancestor","x","fnChildIndex","myIndex","n","candidate","depth","target","current","siblings","numNodes","callNode_default","getListenerArray","eventSource","eventType","listeners","EventSource","fn","handlers","updatedHandlers","h","data","includesOnce","handler","e","eventTypes","type","CallTree","EventSource","events","functionLabels","callNode_default","stack","e","parent","callNode","event","groupChanges","eventArray","events","seen","result","e","group","currentEvent","nextSibling","AppMap","data","ClassMap","CallTree","buildLabels","previousEvent","acc","event","eventId","copy","getRootEvents","baseAppMap","workingAppMap","baseEvent","workingEvent","baseQueue","workingQueue","resolveDifferences","baseChildren","workingChildren","changeSummary","iter","nodeBase","nodeWorking","sha256","HashBuilder","algorithmVersion","key","value","row","r","algorithmName","properties","hash","alias","obj","prop","Event","messages","msg","message","data","p","m","addHiddenProperty","result","parent","eventLabels","requestMethod","requestPath","sql","myIndex","e","event","value","hasProp","stack","ancestorArray","descendantArray","queue","child","fn","boundaryEvent","onEnter","onExit","definedClass","isStatic","methodId","transformToJSON","sqlQuery","route","queryOps","analyze","normalize","parsedSqlCache","normalizeProperties","properties","key","requestProperties","baseProperties","sqlNormalized","cacheKey","abstractSqlAstJSON","HashBuilder","EventStack","id","event","lastEvent","call","parent","getStackId","collection","EventSorter","event","stack","id","EventStack","size","sizeof","stacks","s","chunks","prevChunk","prevStack","transform","transforms","obj","args","x","fn","AppMapBuilder","EventSource","data","EventSorter","dataType","e","event","Event","url","eventId","httpServerRequest","events","returnEvent","sizeBytes","classMap","pruneRatio","d","size","ClassMap","objSize","sizeof","totalBytes","eventAggregates","a","b","i","eventInfo","stacks","currentHideName","pruned","exclusions","callEvent","codeObj","stack","chunk","AppMap","buildAppMap","EventNavigator","event","codeObject","node","sibling","descendant","parent","index","i","filterFn","queue","label","searchLabels","l","mapFunctionLocations","memo","obj","EventInfo","classMap","event","label","getLabel","codeObj","separator","labels","DEFAULT_CONTEXT_DEPTH","DeclutterProperty","on","defaultValue","__publicField","DeclutterTimeProperty","time","DeclutterNamesProperty","names","DeclutterContextNamesProperty","depth","DependencyFolders","DeclutterExternalPathsProperty","dependencyFolders","ROOT_EVENT_LABELS","Declutter","FilterRegExps","filterRegExp","filterExpression","regexpConstructorArgs","markSubtrees","events","filterFn","maxDepth","matchingEvents","e","matchDescendant","child","includeSubtrees","applyIfEmpty","includedEvents","excludeSubtrees","excludedEvents","AppMapFilter","appMap","findings","classMap","matchCodeObjects","expressions","matchSelf","matchTrailingWildcard","memo","codeObject","expr","co","labels","label","includeCodeObjects","subtreeEvents","ancestorEvents","includeAncestors","distance","excludeCodeObjects","isLocalPath","eventIds","finding","buildAppMap","c","mediaRegex","t","mediaFileExtensions","httpServerResponse","pathExt","mimeType","headers","contentTypeKey","k","regex","object","query","pattern","eventsById","map","traceFilter","idStr","id","event","attachedFinding","mergeLists","a","b","result","lowestNumber","sequence","t","coalesce","mergeFilterState","first","second","serializeFilter","filter","declutter","rootObjects","DEFAULT_CONTEXT_DEPTH","memo","k","v","filterStringToFilterState","stringInput","json","base64UrlDecode","deserializeFilter","filterState","AppMapFilter","property","key","value"]}