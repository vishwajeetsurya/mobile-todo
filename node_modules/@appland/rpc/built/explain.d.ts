import { SearchRpc } from './search';
export declare namespace ExplainRpc {
    const ExplainFunctionName = "explain";
    const ExplainStatusFunctionName = "explain.status";
    enum Step {
        NEW = "new",
        RUNNING = "running",
        SEARCH_APPMAPS = "search-appmaps",
        COLLECT_CONTEXT = "collect-context",
        EXPLAIN = "explain",
        COMPLETE = "complete",
        ERROR = "error"
    }
    type ExplainOptions = {
        question: string;
        codeSelection?: string;
        appmaps?: string[];
        threadId?: string;
    };
    type ExplainResponse = {
        userMessageId: string;
        threadId: string;
    };
    type ExplainStatusOptions = {
        userMessageId: string;
        threadId: string;
    };
    type RpcError = {
        code: number;
        message: string;
        data?: object;
    };
    type ContextItem = {
        type: string;
        content: string;
        location?: string;
        score?: number;
    };
    type ContextLabel = {
        name: string;
        weight: string;
    };
    type ExplainStatusResponse = {
        step: Step;
        threadId?: string;
        err?: Error | RpcError;
        vectorTerms?: string[];
        labels?: ContextLabel[];
        searchResponse?: SearchRpc.SearchResponse;
        contextResponse?: ContextItem[];
        explanation?: string[];
    };
}
