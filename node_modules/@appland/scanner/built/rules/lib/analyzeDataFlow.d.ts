import { Event, ValueBase } from '@appland/models';
/**
 * Value tracked with data flow analysis, along with the information about
 * its originating event and a list of any other such values that might have
 * been used in its generation.
 */
export declare type TrackedValue = {
    value: ValueBase;
    origin: Event;
    parents: ReadonlyArray<TrackedValue>;
};
/**
 * Tracks flow of data across the execution trace, identifying all function
 * calls which have a tracked object as its receiver or one of the parameters.
 * Any value such a function returns will also then become tracked.
 * The origin chain of all values is recorded, so full provenience up to
 * the starting set can be reconstructed.
 * @param trackedData Initial data to track.
 * @param startEvent The root event of the analysis.
 * @returns Events which have a tracked piece of data as an input, each
 * associated with the list of such inputs.
 */
export default function analyzeDataFlow(trackedData: ReadonlyArray<ValueBase>, startEvent: Event): Map<Event, ReadonlyArray<TrackedValue>>;
