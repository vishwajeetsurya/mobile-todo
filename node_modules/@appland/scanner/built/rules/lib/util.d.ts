import { Event, ReturnValueObject } from '@appland/models';
export declare function collectAppMapFiles(appmapFile?: string | string[], appmapDir?: string): Promise<string[]>;
declare function verbose(v?: boolean): boolean;
declare function capitalize(str: string): string;
declare function emptyValue(value: string): boolean;
declare function responseContentType(event: Event): string | undefined;
declare function appMapDir(appMapFileName: string): string;
declare function isFalsey(valueObj?: ReturnValueObject): boolean;
declare function parseValue(valueObj: ReturnValueObject): string[];
declare const isTruthy: (valueObj?: ReturnValueObject | undefined) => boolean;
declare function providesAuthentication(event: Event, label: string): boolean;
declare function ideLink(filePath: string, ide: string, eventId: number): string;
declare const toRegExp: (value: string | RegExp) => RegExp;
declare const toRegExpArray: (value: string[] | RegExp[]) => RegExp[];
declare const isRoot: (event: Event | undefined) => boolean;
declare function dasherize(str: string): string;
declare function camelize(text: string): string;
declare function pluralize(word: string, count: number): string;
declare function fileExists(file: string): Promise<boolean>;
export { appMapDir, capitalize, emptyValue, fileExists, isFalsey, isTruthy, ideLink, isRoot, parseValue, camelize, dasherize, pluralize, providesAuthentication, toRegExp, responseContentType, toRegExpArray, verbose, };
