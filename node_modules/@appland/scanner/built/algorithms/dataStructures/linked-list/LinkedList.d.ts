import LinkedListNode from './LinkedListNode';
import Comparator from '../../utils/Comparator';
export default class LinkedList<T> {
    head: LinkedListNode<T> | null;
    tail: LinkedListNode<T> | null;
    compare: Comparator<T>;
    constructor(comparatorFunction: (a: T, b: T) => number);
    prepend(value: T): LinkedList<T>;
    append(value: T): LinkedList<T>;
    delete(value: T): LinkedListNode<T> | null;
    find(value?: T | undefined, callback?: undefined | ((value: T) => boolean)): LinkedListNode<T> | null;
    deleteTail(): LinkedListNode<T> | null;
    deleteHead(): LinkedListNode<T> | null;
    toArray(): LinkedListNode<T>[];
    toString(callback?: undefined | ((value: T) => string)): string;
}
