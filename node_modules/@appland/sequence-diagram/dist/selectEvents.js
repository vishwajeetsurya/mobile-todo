"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.selectEvents = void 0;
function selectEvents(appmap, specification) {
    const isIncludedCodeObject = (event) => !!specification.isIncludedCodeObject(event.codeObject);
    const hasRequiredCodeObjectAncestor = () => {
        if (!specification.hasRequiredCodeObjects)
            throw Error('Expecting at least one required code object id');
        const stack = [];
        let numberOfRequiredCodeObjectsInStack = 0;
        const includedStackEvents = new Set();
        appmap.events.forEach((event) => {
            if (event.isCall()) {
                if (specification.isRequiredCodeObject(event.codeObject)) {
                    if (numberOfRequiredCodeObjectsInStack === 0) {
                        // Mark ancestors as included
                        stack.forEach((event) => includedStackEvents.add(event));
                    }
                    numberOfRequiredCodeObjectsInStack += 1;
                }
                if (numberOfRequiredCodeObjectsInStack > 0) {
                    includedStackEvents.add(event);
                }
                stack.push(event);
            }
            else {
                stack.pop();
                if (specification.isRequiredCodeObject(event.codeObject)) {
                    numberOfRequiredCodeObjectsInStack -= 1;
                }
            }
        });
        return (event) => includedStackEvents.has(event.callEvent);
    };
    // Event code object id must be in the user-requested set.
    let includedEvents = appmap.events.filter(isIncludedCodeObject);
    // Event stack must include at least one required code object id, unless
    // none are required.
    if (specification.hasRequiredCodeObjects) {
        includedEvents = includedEvents.filter(hasRequiredCodeObjectAncestor());
    }
    return includedEvents;
}
exports.selectEvents = selectEvents;
