/// <reference types="node" />
import { AppMap as AppMapDataType, Metadata as MetadataDataType } from '@appland/models';
import { RetryOptions } from './retryOptions';
export declare type UploadAppMapResponse = {
    uuid: string;
};
export declare type UploadAppMapPendingResponse = {
    upload_id: string;
    token: string;
};
export declare type UploadCreateAppMapResponse = {
    completed?: UploadAppMapResponse;
    pending?: UploadAppMapPendingResponse;
};
export declare type CreateAppMapOptions = {
    app?: string;
    metadata?: MetadataDataType;
    public?: boolean;
};
declare type PerformUploadOptions = {
    path: string;
    requireApiKey: boolean;
};
export default class AppMap {
    uuid: string;
    constructor(uuid: string);
    get(): Promise<AppMapDataType>;
    static create(data: Buffer, options: CreateAppMapOptions, retryOptions?: RetryOptions): Promise<UploadAppMapResponse>;
    static createUpload(data: Buffer, options: CreateAppMapOptions, retryOptions?: RetryOptions): Promise<UploadCreateAppMapResponse>;
    protected static performCreate(performOptions: PerformUploadOptions, data: Buffer, options: CreateAppMapOptions, retryOptions?: RetryOptions): Promise<UploadCreateAppMapResponse>;
}
export {};
