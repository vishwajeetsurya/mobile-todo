import InteractionHistory from '../interaction-history';
import { Agent, AgentMode } from '../agent';
import VectorTermsService from './vector-terms-service';
import LookupContextService from './lookup-context-service';
import ApplyContextService from './apply-context-service';
import { ContextV2 } from '../context';
import TechStackService from './tech-stack-service';
type AgentModeResult = {
    agentMode: AgentMode;
    agent: Agent;
    question: string;
};
export default class AgentSelectionService {
    private history;
    private vectorTermsService;
    private lookupContextService;
    private applyContextService;
    private techStackService;
    constructor(history: InteractionHistory, vectorTermsService: VectorTermsService, lookupContextService: LookupContextService, applyContextService: ApplyContextService, techStackService: TechStackService);
    selectAgent(question: string, classification: ContextV2.ContextLabel[]): AgentModeResult;
}
export {};
