"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
const fingerprintQueue_1 = __importDefault(require("./fingerprintQueue"));
const emitUsage_1 = __importDefault(require("../lib/emitUsage"));
class FingerprintDirectoryCommand {
    constructor(directory) {
        this.directory = directory;
        this.appmaps = 0;
        this.events = 0;
    }
    async execute() {
        if ((0, utils_1.verbose)()) {
            console.warn(`Fingerprinting appmaps in ${this.directory}`);
        }
        const fpQueue = new fingerprintQueue_1.default();
        fpQueue.handler.on('index', ({ numEvents, metadata }) => {
            this.appmaps += 1;
            this.events += numEvents;
            this.metadata = metadata;
        });
        let count = 0;
        await this.files((file) => {
            count += 1;
            return fpQueue.push(file);
        });
        if (count > 0)
            await fpQueue.process();
        (0, emitUsage_1.default)(this.directory, this.events, this.appmaps, this.metadata);
        return count;
    }
    async files(fn) {
        return (0, utils_1.findFiles)(this.directory, '.appmap.json', fn);
    }
}
exports.default = FingerprintDirectoryCommand;
//# sourceMappingURL=fingerprintDirectoryCommand.js.map