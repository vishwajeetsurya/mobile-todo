"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplateInlinesDirectory = void 0;
const assert_1 = __importDefault(require("assert"));
const fs_1 = require("fs");
const promises_1 = require("fs/promises");
const path_1 = require("path");
const handlebars_1 = __importDefault(require("handlebars"));
exports.TemplateInlinesDirectory = [
    '../../resources/inlines',
    '../../../resources/inlines', // In development
]
    .map((dirName) => (0, path_1.join)(__dirname, dirName))
    .find((dirName) => (0, fs_1.existsSync)(dirName));
(0, assert_1.default)(exports.TemplateInlinesDirectory, "Report template directory 'inlines' not found");
async function loadReportTemplate(templateFile) {
    (0, assert_1.default)(exports.TemplateInlinesDirectory);
    const inlineFiles = await (0, promises_1.readdir)(exports.TemplateInlinesDirectory);
    const inlines = new Array();
    for (const inlineFile of inlineFiles) {
        const inline = await (0, promises_1.readFile)((0, path_1.join)(exports.TemplateInlinesDirectory, inlineFile), 'utf8');
        inlines.push(inline);
    }
    const mainTemplate = await (0, promises_1.readFile)(templateFile, 'utf8');
    return handlebars_1.default.compile([...inlines, mainTemplate].join('\n'));
}
exports.default = loadReportTemplate;
//# sourceMappingURL=loadReportTemplate.js.map