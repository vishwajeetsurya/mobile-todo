"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Paths = void 0;
const glob_1 = require("glob");
const path_1 = require("path");
const util_1 = require("util");
const RevisionName_1 = require("./RevisionName");
class Paths {
    constructor(workingDir) {
        this.workingDir = workingDir;
    }
    async appmaps(revisionName) {
        const metadataPaths = await (0, util_1.promisify)(glob_1.glob)((0, path_1.join)(this.workingDir, revisionName, '**/metadata.json'));
        return metadataPaths.map((path) => (0, path_1.relative)((0, path_1.join)(this.workingDir, revisionName), (0, path_1.dirname)(path)));
    }
    manifestPath(revisionName) {
        return (0, path_1.join)(this.revisionPath(revisionName), 'appmap_archive.json');
    }
    findingsPath(revisionName) {
        return (0, path_1.join)(this.workingDir, revisionName, 'appmap-findings.json');
    }
    revisionPath(revisionName) {
        return (0, path_1.join)(this.workingDir, revisionName);
    }
    openapiPath(revisionName) {
        return (0, path_1.join)(this.workingDir, revisionName, 'openapi.yml');
    }
    appmapPath(revisionName, appmap) {
        return [(0, path_1.join)(this.workingDir, revisionName, appmap), 'appmap.json'].join('.');
    }
    indexFilePath(revisionName, appmap, indexFile) {
        return (0, path_1.join)(this.workingDir, revisionName, appmap, indexFile);
    }
    metadataPath(revisionName, appmap) {
        return this.indexFilePath(revisionName, appmap, 'metadata.json');
    }
    classMapPath(revisionName, appmap) {
        return this.indexFilePath(revisionName, appmap, 'classMap.json');
    }
    sequenceDiagramPath(revisionName, appmap) {
        return this.indexFilePath(revisionName, appmap, 'sequence.json');
    }
    sequenceDiagramDiffPath(appmap) {
        return (0, path_1.join)(this.workingDir, RevisionName_1.RevisionName.Diff, [appmap, 'diff.sequence.json'].join('.'));
    }
}
exports.Paths = Paths;
//# sourceMappingURL=Paths.js.map