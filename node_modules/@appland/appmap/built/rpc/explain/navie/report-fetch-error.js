"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const console_1 = require("console");
const utils_1 = require("../../../utils");
const ENDPOINT_FAILURES_REPORTED = new Set();
async function reportFetchError(endpoint, remoteFunction) {
    // Wrap the error handling in its own error handler so that we don't inadvertently
    // blow up the request with bad error handling.
    function handleError(error) {
        try {
            let message;
            if (error instanceof Error) {
                message = error.message;
            }
            else {
                message = String(error);
            }
            const errorKey = [endpoint, message].join(' : ');
            if (!ENDPOINT_FAILURES_REPORTED.has(errorKey)) {
                (0, console_1.warn)(errorKey);
                if ((0, utils_1.verbose)())
                    (0, console_1.warn)(error);
                ENDPOINT_FAILURES_REPORTED.add(errorKey);
            }
        }
        catch (handlingError) {
            (0, console_1.warn)(handlingError);
            (0, console_1.warn)(error);
        }
    }
    try {
        return await remoteFunction();
    }
    catch (error) {
        handleError(error);
        return undefined;
    }
}
exports.default = reportFetchError;
//# sourceMappingURL=report-fetch-error.js.map