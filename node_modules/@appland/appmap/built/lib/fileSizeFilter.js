"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fileSizeFilter = exports.DefaultMaxAppMapSizeInMB = void 0;
const promises_1 = require("fs/promises");
exports.DefaultMaxAppMapSizeInMB = 50;
// Skip files that are larger than a specified max size.
function fileSizeFilter(maxFileSize) {
    return async (file) => {
        let fileStat;
        try {
            fileStat = await (0, promises_1.stat)(file);
        }
        catch (_a) {
            return { enable: false, message: `File ${file} not found` };
        }
        if (fileStat.size <= maxFileSize)
            return { enable: true };
        else
            return {
                enable: false,
                message: `Skipping ${file} as its file size of ${fileStat.size} bytes is larger than the maximum configured file size of ${maxFileSize} bytes`,
            };
    };
}
exports.fileSizeFilter = fileSizeFilter;
//# sourceMappingURL=fileSizeFilter.js.map