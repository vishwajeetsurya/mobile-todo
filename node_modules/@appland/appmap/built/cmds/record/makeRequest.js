"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RemoteRecordingError = void 0;
const axios_1 = __importDefault(require("axios"));
class RemoteRecordingError extends Error {
    constructor(description, statusCode, method, path, msg) {
        super(msg);
        this.description = description;
        this.statusCode = statusCode;
        this.method = method;
        this.path = path;
    }
    toString() {
        return `description: ${this.description}
status: ${this.statusCode}
response text: ${this.message}`;
    }
}
exports.RemoteRecordingError = RemoteRecordingError;
async function makeRequest(rr, path, method, description, statusCodes = [200, 201, 204], adapter) {
    return new Promise((resolve, reject) => {
        const { hostname: host, protocol, port } = rr.requestOptions;
        const url = `${protocol}//${host}:${port}${path}`;
        (0, axios_1.default)({
            method,
            url,
            responseType: 'arraybuffer',
            validateStatus: () => true,
            adapter,
        })
            .then((response) => {
            const statusCode = response.status;
            const data = response.data.toString();
            if (statusCodes.includes(statusCode)) {
                resolve({ statusCode, data });
            }
            else {
                reject(new RemoteRecordingError(description, statusCode, method, path, data));
            }
        })
            .catch((e) => {
            reject(e);
        });
    });
}
exports.default = makeRequest;
//# sourceMappingURL=makeRequest.js.map