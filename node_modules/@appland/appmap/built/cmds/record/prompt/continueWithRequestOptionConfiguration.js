"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurationAction = void 0;
const userInteraction_1 = __importDefault(require("../../userInteraction"));
var ConfigurationAction;
(function (ConfigurationAction) {
    ConfigurationAction["HostAndPort"] = "Reconfigure host and port";
    ConfigurationAction["RequestOptions"] = "Keep the host and port, and configure additional connection options";
})(ConfigurationAction = exports.ConfigurationAction || (exports.ConfigurationAction = {}));
async function continueWithRequestOptionConfiguration({ configuration, }) {
    userInteraction_1.default.progress(`I can't find your AppMap server process on port ${configuration.requestOptions().port}.`);
    userInteraction_1.default.progress('');
    userInteraction_1.default.progress(`If you're sure it's running on that port, we can continue with extra configuration ` +
        `options that may enable me to connect to the agent. ` +
        `Otherwise you can start over by reconfiguring the host and port.`);
    userInteraction_1.default.progress('');
    const { configurationAction } = await userInteraction_1.default.prompt({
        type: 'list',
        choices: [ConfigurationAction.HostAndPort, ConfigurationAction.RequestOptions],
        name: 'configurationAction',
        message: 'What would you like to do?',
    });
    return configurationAction;
}
exports.default = continueWithRequestOptionConfiguration;
//# sourceMappingURL=continueWithRequestOptionConfiguration.js.map