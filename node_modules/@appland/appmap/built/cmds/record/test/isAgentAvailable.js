"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const userInteraction_1 = __importDefault(require("../../userInteraction"));
const makeRequest_1 = require("../makeRequest");
const remoteRecording_1 = __importDefault(require("../remoteRecording"));
async function isAgentAvailable(recordContext) {
    const { configuration } = recordContext;
    const ro = configuration.requestOptions();
    const location = configuration.locationString();
    userInteraction_1.default.status = `Checking if the AppMap agent is available at ${location}`;
    try {
        await new remoteRecording_1.default(ro).status();
        userInteraction_1.default.success(`AppMap agent is available at ${location}`);
        return true;
    }
    catch (e) {
        if (e instanceof makeRequest_1.RemoteRecordingError) {
            recordContext.remoteError = e;
        }
        userInteraction_1.default.error(`AppMap agent is not available at ${location}.`);
        if (await userInteraction_1.default.confirm(`Would you like to see the server's response?`)) {
            userInteraction_1.default.error(e.toString());
        }
        return false;
    }
}
exports.default = isAgentAvailable;
//# sourceMappingURL=isAgentAvailable.js.map