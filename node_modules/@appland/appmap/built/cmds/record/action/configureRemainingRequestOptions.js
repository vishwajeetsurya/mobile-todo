"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const userInteraction_1 = __importDefault(require("../../userInteraction"));
async function configureRemainingRequestOptions({ configuration }) {
    const defaultPath = configuration.configOption('remote_recording.path', '/');
    const { baseURL: path } = await userInteraction_1.default.prompt({
        type: 'input',
        name: 'baseURL',
        message: `Enter the base URL of your application:`,
        default: defaultPath,
    });
    if (path !== defaultPath) {
        let basePath = path;
        if (!basePath.endsWith('/'))
            basePath = [basePath, '/'].join('');
        if (!basePath.startsWith('/'))
            basePath = ['/', basePath].join('');
        configuration.setConfigOption('remote_recording.path', basePath);
    }
    const defaultProtocol = configuration.configOption('remote_recording.protocol', 'http:');
    const { useSSL } = await userInteraction_1.default.prompt({
        type: 'confirm',
        name: 'useSSL',
        message: 'Does your application require SSL / HTTPS?',
        default: defaultProtocol === 'https:',
    });
    const protocol = useSSL ? 'https:' : 'http:';
    if (protocol !== defaultProtocol) {
        configuration.setConfigOption('remote_recording.protocol', protocol);
    }
    await configuration.write();
    const ro = configuration.requestOptions();
    userInteraction_1.default.progress(`Here's the URL I will use to try and connect to the AppMap agent:\n`);
    userInteraction_1.default.progress(`${ro.protocol}//${ro.hostname}:${ro.port}${ro.path}_appmap/record`);
    userInteraction_1.default.progress('');
}
exports.default = configureRemainingRequestOptions;
//# sourceMappingURL=configureRemainingRequestOptions.js.map