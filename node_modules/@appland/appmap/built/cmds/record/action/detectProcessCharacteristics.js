"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const userInteraction_1 = __importDefault(require("../../userInteraction"));
const port_pid_1 = __importDefault(require("port-pid"));
const ps_node_1 = __importDefault(require("ps-node"));
async function detectProcessCharacteristics({ configuration, }) {
    const ro = configuration.requestOptions();
    if (ro.hostname !== 'localhost') {
        return false;
    }
    userInteraction_1.default.status = `Looking for your application process on port ${ro.port}...`;
    const printPid = async (pid) => {
        return new Promise((resolve) => {
            ps_node_1.default.lookup({ pid }, function (err, resultList) {
                if (err) {
                    userInteraction_1.default.error(`Process ${pid} not found: ${err}`);
                    resolve();
                }
                const process = resultList[0];
                if (process) {
                    userInteraction_1.default.success(process.arguments.join(' '));
                    resolve();
                }
                else {
                    userInteraction_1.default.error(`Process ${pid} not found`);
                    resolve();
                }
            });
        });
    };
    const start = new Date().getTime();
    const pids = await (0, port_pid_1.default)(ro.port).then(async (pids) => {
        if (pids && pids.tcp.length > 0) {
            await Promise.all(pids.tcp.map(printPid));
            return pids;
        }
    });
    if (!pids) {
        userInteraction_1.default.error();
        userInteraction_1.default.progress('');
        return false;
    }
    async function confirm() {
        const { looksGood } = await userInteraction_1.default.prompt({
            type: 'confirm',
            name: 'looksGood',
            message: `Does this look like your application server process?`,
            default: 'y',
        });
        return looksGood;
    }
    userInteraction_1.default.progress('');
    return !!pids && (await confirm());
}
exports.default = detectProcessCharacteristics;
//# sourceMappingURL=detectProcessCharacteristics.js.map