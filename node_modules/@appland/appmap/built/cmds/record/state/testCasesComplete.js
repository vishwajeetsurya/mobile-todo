"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const chalk_1 = __importDefault(require("chalk"));
const openTicket_1 = __importDefault(require("../../../lib/ticket/openTicket"));
const userInteraction_1 = __importDefault(require("../../userInteraction"));
const printAppMapCount_1 = __importDefault(require("../action/printAppMapCount"));
async function testCasesComplete(recordContext) {
    // Handle command failures here, rather than in a separate state, so we maintain compatibility
    // with the Azure Function that processes telemetry events.
    var _a;
    // If the reason test recording generated no appmaps is that there
    // were no testcases, then this isn't a failure.
    let isRubyWithNoTestcases = false;
    if (recordContext.output && recordContext.output.length > 0) {
        isRubyWithNoTestcases = /^No examples found./.test(recordContext.output[0]);
    }
    if (!isRubyWithNoTestcases &&
        (recordContext.failures > 0 || recordContext.appMapsCreated === 0)) {
        if (recordContext.appMapsCreated === 0)
            userInteraction_1.default.warn(`\n${chalk_1.default.yellow('!')} The test commands failed to create AppMaps\n`);
        const errors = ((_a = recordContext.output) === null || _a === void 0 ? void 0 : _a.join('\n').length) > 0
            ? recordContext.output
            : `[Test command failed with no output]`;
        const helpMsg = ` If you want assistance, the test command, error message, exit code, and APPMAP environment variables can be uploaded securely to the AppMap ZenDesk support portal.`;
        await (0, openTicket_1.default)(errors, helpMsg);
        return;
    }
    (0, assert_1.default)(recordContext.appMapDir);
    await (0, printAppMapCount_1.default)(recordContext.appMapDir);
    return;
}
exports.default = testCasesComplete;
//# sourceMappingURL=testCasesComplete.js.map