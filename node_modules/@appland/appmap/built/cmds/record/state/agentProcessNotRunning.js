"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const userInteraction_1 = __importDefault(require("../../userInteraction"));
const configureHostAndPort_1 = __importDefault(require("../action/configureHostAndPort"));
const record_remote_1 = __importDefault(require("./record_remote"));
// No process could be contact on the configured host and port.
// Prompt the user to start the agent process, and then start over.
async function agentProcessNotRunning(context) {
    userInteraction_1.default.progress(`It looks like you need to start your app (make sure you have the AppMap agent enabled).`);
    userInteraction_1.default.progress(`Or maybe your app is running, but it's on a different host and/or port.`);
    userInteraction_1.default.progress(``);
    userInteraction_1.default.progress(`To create a recording, you need to run your app using ` +
        `the instructions in the AppMap documentation. Choose the most suitable link here, ` +
        `then configure and launch your app process. Once you've done that, come back to this terminal ` +
        `and we will try again.`);
    userInteraction_1.default.progress(`
  Rails:      https://appland.com/docs/reference/appmap-ruby.html#remote-recording
  Django:     https://appland.com/docs/reference/appmap-python.html#django
  Flask:      https://appland.com/docs/reference/appmap-python.html#flask
  Java:       https://appland.com/docs/reference/appmap-java.html#remote-recording
  JavaScript: https://appland.com/docs/reference/appmap-agent-js.html#remote-recording
  `);
    await (0, configureHostAndPort_1.default)(context);
    return record_remote_1.default;
}
exports.default = agentProcessNotRunning;
//# sourceMappingURL=agentProcessNotRunning.js.map