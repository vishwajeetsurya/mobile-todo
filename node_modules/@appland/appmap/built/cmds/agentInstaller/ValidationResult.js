"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatValidationError = exports.parseValidationResult = void 0;
const errors_1 = require("../errors");
function normalizeErrorDescription(raw) {
    return Object.assign({ level: raw.level || 'error', message: raw.message || '' }, raw);
}
function parseValidationResult(json) {
    var _a;
    try {
        const raw = JSON.parse(json);
        if (Array.isArray(raw))
            return { errors: raw.map(normalizeErrorDescription) };
        return Object.assign(Object.assign({}, raw), { errors: (_a = raw.errors) === null || _a === void 0 ? void 0 : _a.map(normalizeErrorDescription) });
    }
    catch (e) {
        throw new errors_1.ValidationError(`Unable to parse validation output.\n${e}\nOutput:\n${json}`);
    }
}
exports.parseValidationResult = parseValidationResult;
function formatValidationError(e) {
    const m = [e.level.charAt(0).toUpperCase(), e.level.slice(1), ': ', e.message];
    if (e.filename)
        m.push(' in ', e.filename);
    if (e.setting)
        m.push(' at ', e.setting);
    if (e.detailed_message)
        m.push('\n', e.detailed_message);
    if (e.help_urls)
        m.push('\n', 'See: ', e.help_urls.join('\n\t'));
    return m.join('');
}
exports.formatValidationError = formatValidationError;
//# sourceMappingURL=ValidationResult.js.map