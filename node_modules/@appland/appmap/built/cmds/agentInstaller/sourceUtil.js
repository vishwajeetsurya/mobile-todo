"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getColumn = exports.getWhitespace = exports.Whitespace = void 0;
const detect_indent_1 = __importDefault(require("detect-indent"));
class Whitespace {
    constructor(type, width) {
        this.type = type || 'space';
        this.width = Math.max(width || 2, 2);
    }
    get char() {
        return this.type === 'tab' ? '\t' : ' ';
    }
    padLine(line, width) {
        const finalWidth = width === undefined ? this.width : width;
        return new Array(finalWidth).fill(this.char).join('') + line;
    }
}
exports.Whitespace = Whitespace;
function getWhitespace(source) {
    const { type, amount: width } = (0, detect_indent_1.default)(source);
    return new Whitespace(type, width);
}
exports.getWhitespace = getWhitespace;
function getColumn(source, index) {
    const previousNewLineIndex = source.substring(0, index).lastIndexOf('\n');
    if (previousNewLineIndex === -1) {
        return index;
    }
    return index - previousNewLineIndex - 1;
}
exports.getColumn = getColumn;
//# sourceMappingURL=sourceUtil.js.map