"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const console_1 = require("console");
const readIndexFile_1 = __importDefault(require("../readIndexFile"));
function collectHTTPClientRequests(clientRouteCountByResource, resourceTokens) {
    return async (appmap) => {
        const httpClientRequests = await (0, readIndexFile_1.default)(appmap, 'canonical.httpClientRequests.json');
        if (!httpClientRequests)
            return;
        for (const request of httpClientRequests) {
            const { route } = request;
            const [_method, urlStr] = route.split(' ');
            let hostname, path;
            try {
                const url = new URL(urlStr);
                hostname = url.hostname;
                path = url.pathname;
            }
            catch (_a) {
                (0, console_1.warn)(`Error parsing URL: ${urlStr}`);
                path = urlStr;
            }
            let directoryIsh = path.split('/').slice(0, resourceTokens).join('/');
            if (hostname)
                directoryIsh = [hostname, directoryIsh].join('');
            if (!clientRouteCountByResource[directoryIsh])
                clientRouteCountByResource[directoryIsh] = 1;
            else
                clientRouteCountByResource[directoryIsh] = clientRouteCountByResource[directoryIsh] + 1;
        }
    };
}
exports.default = collectHTTPClientRequests;
//# sourceMappingURL=collectHTTPClientRequests.js.map